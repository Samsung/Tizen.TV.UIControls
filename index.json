{
  "guides/AnimatedNavigationPage.html": {
    "href": "guides/AnimatedNavigationPage.html",
    "title": "AnimatedNavigationPage",
    "keywords": "AnimatedNavigationPage Introduction AnimatedNavigationPage is a subclass of Xamarin.Forms.NavigationPage that support page tranisition animation when the page is popped or pushed. Each page can define a push transition animation and pop transition animation respectively using the attached properties below. SetPushAnimation() SetPushAnimationRate() SetPushAnimationLength() SetPopAnimation() SetPopAnimationRate() SetPopAnimationLength() When the page is pushed or popped through AnimatedNavigationPage , the defined animation will run. Creating the Root Page The first page added to a navigation stack is referred to as the root page of the application, and the following code example shows how this is accomplished: public App () { MainPage = new AnimatedNavigationPage (new MyPage()); } This causes the MyPage ContentPage instance to be pushed onto the navigation stack, where it becomes the active page and the root page of the application. Describing the Page Transition Animations Through various attached properties provided by AnimatablePage , all pages can define push/pop animation as shown below. public MyPage () { var pushAnim = new Animation (v => Opacity = v, 0, 1); var popAnim = new Animation (v => Opacity = v, 1, 0); this.SetPushAnimation(pushAnim); this.SetPopAnimation(popAnim); } You can define your own page transition animations like this. Using the AnimatedContentPage For convenience, we provide predefined page transition animations through AnimatedContentPage . AnimatedContentPage is a subclass of Xamarin.Forms.ContentPage that provide pre-defined page tranisition animation. The PageTransition property allows you to set pre-defined page transition animations for each pages. The predefined page transition animations are as follows. SlideFromLeft : Slide from left to right on push, and slide from right to left on pop SlideFromRight : Slide from right to left on push, and slide from left to right on pop SlideFromTop : Slide from top to bottom on push, and slide from bottom to top on pop SlideFromBottom : Slide from bottom to top on push, and slide from top to bottom on pop Fade : Show a fade animation Scale : Show a scale animation var page = new AnimatedContentPage { PageTranistion = PageTranistion.SlideFromRight }; //Push a page await Navigation.PushAsync(page); //Pop a page await Navigation.PopAsync(); Limitations The basic page navigating method is the same as Xamarin.Forms.NavigationPage , but the following methods and properties are not supported. BackButtonTitle HasNavigationBar HasBackButton Tint BarBackgroundColor BarBackground BarTextColor TitleIcon IconColor TitleView Related Links API reference Sample"
  },
  "guides/DrawerLayout.html": {
    "href": "guides/DrawerLayout.html",
    "title": "DrawerLayout",
    "keywords": "DrawerLayout Introduction DrawerLayout is a kind of Layout that acts like a MasterDetailPage . it has a drawer part that interactively pull and push. Drawer part can control with IsOpen property. The open and close action are including animation. Drawer and Content DrawerLayout is consist of Drawer and Content view. Drawer is a moving part, Content is fixed part. Drawer is like a MasterPage and Content is like a DetailPage in MasterDetailPage . DrawerMode The developer can control the layout of the content when the drawer was opened by using DrawerMode DrawerMode.Resize (default) It is default behavior, Content view is resized to open drawer view DrawerMode.Panning Content view is moved to side DrawerMode.Overlap Drawer view is overlapped above content view DrawerPosition Developers can set position of the drawer. it default on the left side. but if RTL(Right to left) mode enabled, it default on the right side. DrawerClosedWidth Developers can set the width of the closed drawer."
  },
  "guides/MediaPlayer_Converter.html": {
    "href": "guides/MediaPlayer_Converter.html",
    "title": "Problem definition",
    "keywords": "Problem definition MediaPlayer.Position is int value, but Progressbar.Progress is double value (0 to 1.0) Need duration to convert Create a custom Converter Implements Xamarin.Forms.IValueConverter public class PositionToProgressConverter : IValueConverter { public object Convert(object value, Type targetType, object parameter, CultureInfo culture) { return ((int)value / (double)(GetParameter(parameter))); } public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) { return (int)((double)value * GetParameter(parameter)); } int GetParameter(object parameter) { var duration = ((Tizen.TV.UIControls.Forms.MediaPlayer)parameter).Duration; if (duration == 0) duration = 1; return duration; } } Pass a MediaPlayer instance as the parameter Use custom converter in Xaml .... <ContentPage.Resources> <ResourceDictionary> <local:PositionToProgressConverter x:Key=\"positionToProgress\"/> </ResourceDictionary> </ContentPage.Resources> ... <ProgressBar Progress=\"{Binding Source={x:Reference Player}, Path=Position, Converter={StaticResource positionToProgress}, ConverterParameter={x:Reference Player}}}\"/> ...."
  },
  "guides/ContentPopup.html": {
    "href": "guides/ContentPopup.html",
    "title": "ContentPopup",
    "keywords": "ContentPopup Introduction ContentPopup is a type of Xamarin.Forms.Element (not a Xamarin.Forms.VisualElement) that contains a single child element (called Content) and allows to open it as a popup. Create a ContentPopup You can easily create a ContentPopup like any other Xamarin.Forms views. // Creates a ContentPopup var popup = new ContentPopup { BackgroundColor = Color.FromHex(\"#CCF0F8FF\"), Content = new StackLayout { Children = { new Label { Text = \"This ContentPopup is dismissed as a back key.\", } } } }; Show a ContentPopup Similar to Xamarin.Forms DisplayActionSheet() and DisplayAlert() , to open a ContentPopup , you can call ShowPopup() as shown below. await Navigation.ShowPopup(popup); An awaitable Task will be returned when popup is closed. Content You can customize the content of the popup as you want by setting the Content property. All Xamarin.Forms layouts can be set as Content (not a Xamarin.Forms.View). BackgroundColor The background color refers to the color dimmed by ContentPopup . The default background color of ContentPopup is Tranparent . So if you want to change this, just set BackgroundColor to the color you want. Back Button Basically, you can use the back button of remote controller to close the ContentPopup . If you want the back button to behave differently, override OnBackButtonPressed as shown below. This example shows that when the back button is pressed, the ContentPopup doesn't do the default behavior to close. In this case, the user must explicitly use Dismiss() to close the ContentPopup . public class MyPopup : CPopup { protected override bool OnBackButtonPressed() { return true; } } Related Links API reference Sample"
  },
  "guides/InputEvents.html": {
    "href": "guides/InputEvents.html",
    "title": "InputEvents",
    "keywords": "InputEvents InputEvents helps developers to handle the remote control events that are emitted from TV devices. The RemoteKeyHandler which contains a Command and key events can be added to a collection of handlers. The access key can be set to a specific view and the view gets a direct focus when the key is pressed. When the view is a Button , Clicked event occurs also. How to add RemoteKeyHandler Get a collection of handlers using GetEventHandlers(BindableObject view) , and add RemoteKeyHandler to it. xaml <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:uicontrols=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" x:Class=\"Sample.TestRemoteControl_xaml\" x:Name=\"rootPage\"> <ContentPage.Content> <StackLayout> <Button Text=\"Button1\"> <uicontrols:InputEvents.EventHandlers> <uicontrols:RemoteKeyHandler Command=\"{Binding ButtonHandler, Source={x:Reference rootPage}}\"/> </uicontrols:InputEvents.EventHandlers> </Button> </StackLayout> </ContentPage.Content> </ContentPage> C# public class TestRemoteControl : ContentPage { public TestRemoteControl() { Button button1 = new Button { Text = \"Button1\" }; RemoteKeyHandler buttonHandler = new RemoteKeyHandler(new Action<RemoteControlKeyEventArgs>((arg) => { button1.Text = $\"Button1 : {arg.KeyType} {arg.KeyName} {arg.PlatformKeyName}\"; })); InputEvents.GetEventHandlers(button1).Add(buttonHandler); Content = new StackLayout { Children = { button1, } }; } } How to set an access key xaml <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:uicontrols=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" x:Class=\"Sample.TestRemoteControl_xaml\" x:Name=\"rootPage\"> <ContentPage.Content> <StackLayout> <Button Text=\"Button1 (accesskey 1)\" uicontrols:InputEvents.AccessKey=\"NUM1\" Clicked=\"OnClicked\" /> </StackLayout> </ContentPage.Content> </ContentPage> C# public class TestRemoteControl : ContentPage { int _clickedTimes = 0; public TestRemoteControl() { Button button1 = new Button { Text = \"Button2 (Accesskey 1)\" }; button1.Clicked += (s, e) => { button1.Text = $\"Button1 (Accesskey 1): {++_clickedTimes} clicked\"; }; InputEvents.SetAccessKey(button1, RemoteControlKeyNames.NUM1); Content = new StackLayout { Children = { button1, } }; } }"
  },
  "guides/ContentButton.html": {
    "href": "guides/ContentButton.html",
    "title": "ContentButton",
    "keywords": "ContentButton ContentButton is a type of Xamarin.Forms.ContentView that contains a single child element (called Content) and is typically used for custom, reusable controls. Also, as its name implies, ContentButton is designed to be used like a Button that implements Xamarin.Forms.IButtonController . How to customize the button using ContentButton ? ContentButton provides the view to show and the states(Clicked, Pressed and Released) of the button. You can customize the button through changing the view according to the state. The following example shows the CustomButton composed of a combination of Images that define the icon, background, and border of a button. To show a border, this example has set an outlined image with blending color as a Content, and the background color of the button will change to gray when the button is pressed for click-effect. For more information, see the following links: ContentButton API reference Create ContentButton C# file public class ContentButtonTest : ContentPage { public ContentButtonTest() { ContentButton button = new ContentButton { Content = new Label { Text = \"Text Button\" } }; Content = new StackLayout { Children = { button, } }; } } XAML file <?xml version=\"1.0\" encoding=\"utf-8\" ?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:tv=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" Title=\"ContentButton Test\" x:Class=\"Sample.ContentButton.ContentButtonTest\"> <ContentPage.Content> <StackLayout HorizontalOptions=\"Center\"> <tv:ContentButton Clicked=\"ContentButton_Clicked\"> <VisualStateManager.VisualStateGroups> <VisualStateGroup x:Name=\"CommonStates\"> <VisualState x:Name=\"Normal\"> <VisualState.Setters> <Setter Property=\"BackgroundColor\" Value=\"Transparent\"/> </VisualState.Setters> </VisualState> <VisualState x:Name=\"Focused\"> <VisualState.Setters> <Setter Property=\"BackgroundColor\" Value=\"Orange\"/> </VisualState.Setters> </VisualState> </VisualStateGroup> </VisualStateManager.VisualStateGroups> <Label FontSize=\"Header\" x:Name=\"_label\" Text=\"Text Button\" /> </tv:ContentButton> </StackLayout> </ContentPage.Content> </ContentPage>"
  },
  "guides/Troubleshooter.html": {
    "href": "guides/Troubleshooter.html",
    "title": "Troubleshooter",
    "keywords": "Troubleshooter Install Tizen.TV.UIControls package to your TV application to resolve the following limitations. The Tizen.TV.UIControls package will replace the default renderers for Xamarin.Forms.Entry and Xamarin.Forms.Editor to resolve the issues described below. The following limitations are reproduced on 2018 TV models that use Tizen 4.0 platform. Limitations Entry When Xamarin.Forms.Entry gets the focus, the Input Panel is showed automatically on the screen to allow a user to enter the text. However, the Input Panel: is not closed, when Done or Cancel key is pressed. is not closed, when Back key on the remote control is pressed. does not invoke the Entry.Completed event, when Done key is pressed. Editor When Xamarin.Forms.Editor gets the focus, the Input Panel is showed automatically on the screen to allow a user to enter the text. However, the Input Panel: is not closed, when Done or Cancel key is pressed. is not closed, when Back key on the remote control is pressed. does not invoke the Entry.Completed event, when Done key is pressed."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Tizen TV UI Controls",
    "keywords": "Tizen TV UI Controls This document is the API Specification for the Tizen TV UIControls. Namespace Description Tizen.TV.UIControls.Forms Provide the classes that help creating Tizen TV applications."
  },
  "api/Tizen.TV.UIControls.Forms.FocusedItemChangedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.FocusedItemChangedEventArgs.html",
    "title": "Class FocusedItemChangedEventArgs",
    "keywords": "Class FocusedItemChangedEventArgs Event arguments for the ItemFocused event. Inheritance System.Object FocusedItemChangedEventArgs Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class FocusedItemChangedEventArgs : EventArgs Constructors FocusedItemChangedEventArgs(Object, Int32) Creates a new FocusedItemChangedEventArgs event that indicates that the user has focused. Declaration public FocusedItemChangedEventArgs(object focusedItem, int focusedItemIndex) Parameters Type Name Description System.Object focusedItem The item is focused. System.Int32 focusedItemIndex The item's index is focused. Properties FocusedItem Gets the new focused item. Declaration public object FocusedItem { get; } Property Value Type Description System.Object FocusedItemIndex Gets the new focused item's index. Declaration public int FocusedItemIndex { get; } Property Value Type Description System.Int32"
  },
  "index.html": {
    "href": "index.html",
    "title": "Tizen TV UIControls",
    "keywords": "Tizen TV UIControls The Tizen TV UIControls is a set of helpful extensions to the Xamarin Forms framework for the Samsung TV device. The binaries are available via NuGet (package name is \"Tizen.TV.UIControls\") with the source available here. Major Classes Name Description MediaPlayer Class that provieds the essential components to play the media contents. MediaView Class that is used to display the video output on the screen. OverlayMediaView An overlay MediaView. OverlayPage Class that is used to display the video output on a page. RecycleItemsView ScrollView that efficiently displays a collection of data using DataTemplate. InputEvents Class that helps developers to handle the remote control events that are emitted from TV devices. RemoteKeyHandler Class that contains a command and key events that react to remote controller events. DrawerLayout A kind of Layout that acts like a MasterDetailPage ."
  },
  "guides/Overview.html": {
    "href": "guides/Overview.html",
    "title": "Tizen TV UIControls",
    "keywords": "Tizen TV UIControls The Tizen TV UIControls is a set of helpful extensions to the Xamarin Forms framework for the Samsung TV device. The binaries are available via NuGet (package name is Tizen.TV.UIControls) with the source available here. Screen shot Build Status Packages Getting Started Install package nuget.exe nuget.exe install Tizen.TV.UIControls -Version 1.0.0 .csproj <PackageReference Include=\"Tizen.TV.UIControls\" Version=\"1.0.0\" /> Use in Xaml Declaring Namespaces for TV.UIControls <ContentPage ... xmlns:tv=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" ...> Initialization on Platform code Tizen.TV.UIControls.Forms.UIControls.Init(); global::Xamarin.Forms.Platform.Tizen.Forms.Init(app); //set main window provider Tizen.TV.UIControls.Forms.UIControls.MainWindowProvider = () => app.MainWindow;"
  },
  "guides/RecycleItemsView_Introduction.html": {
    "href": "guides/RecycleItemsView_Introduction.html",
    "title": "RecycleItemsView",
    "keywords": "RecycleItemsView Introduction RecycleItemsView is a view that takes in a list of user objects and produces views for each of them to be displayed. Especially, it can be used when the data is displayed in the same view template. It reuses the templated view when it is out of sight. Concept How to use C# var recycleView = new RecycleItemsView() { ContentMargin = 60, ItemHeight = 350, ItemWidth = 300, Spacing = 20, ItemsSource = item, ItemTemplate = new DataTemplate(() => { Label label; var view = new StackLayout { Children = { (label = new Label { }) } }; view.SetBinding(StackLayout.BackgroundColorProperty, new Binding(\"Color\")); label.SetBinding(Label.TextProperty, new Binding(\"Label\")); return view; }) }), XAML <tvcontrols:RecycleItemsView ContentMargin=\"60\" ItemWidth=\"300\" ItemHeight=\"350\" Spacing=\"20\" ItemsSource=\"{Binding Items}\"> <tvcontrols:RecycleItemsView.ItemTemplate> <DataTemplate> <StackLayout BackgroundColor=\"{Binding Color}\"> <Label Text=\"{Binding Text}\"/> </StackLayout> </DataTemplate> </tvcontrols:RecycleItemsView.ItemTemplate> </tvcontrols:RecycleItemsView> Properties related layouting Item width and height All items in RecycleItemsView have the same width and height, because it should be reused. Multiple columns You can display items on multiple lines. Use ColumnCount property to apply multiple columns. Header and Footer RecycleItemsView displays items with a same DataTemplate . If you want to use special looks for first or last, you can use Header or Footer property. The Header and Footer can be data objects that contain a view model or a view instance. If Header or Footer is a View, it is directly used for displaying header or footer. If not, HeaderTemplate or FooterTemplate is used to make a view that is used for displaying header or footer. Related Links DataTemplate Sample"
  },
  "api/Tizen.TV.UIControls.Forms.Focus.html": {
    "href": "api/Tizen.TV.UIControls.Forms.Focus.html",
    "title": "Class Focus",
    "keywords": "Class Focus Inheritance System.Object Focus Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public static class Focus : object Fields DownProperty Declaration public static readonly BindableProperty DownProperty Field Value Type Description BindableProperty LeftProperty Declaration public static readonly BindableProperty LeftProperty Field Value Type Description BindableProperty RightProperty Declaration public static readonly BindableProperty RightProperty Field Value Type Description BindableProperty UpProperty Declaration public static readonly BindableProperty UpProperty Field Value Type Description BindableProperty Methods GetDown(BindableObject) Declaration public static VisualElement GetDown(BindableObject view) Parameters Type Name Description BindableObject view Returns Type Description VisualElement GetLeft(BindableObject) Declaration public static VisualElement GetLeft(BindableObject view) Parameters Type Name Description BindableObject view Returns Type Description VisualElement GetRight(BindableObject) Declaration public static VisualElement GetRight(BindableObject view) Parameters Type Name Description BindableObject view Returns Type Description VisualElement GetUp(BindableObject) Declaration public static VisualElement GetUp(BindableObject view) Parameters Type Name Description BindableObject view Returns Type Description VisualElement SetDown(BindableObject, VisualElement) Declaration public static void SetDown(BindableObject view, VisualElement value) Parameters Type Name Description BindableObject view VisualElement value SetLeft(BindableObject, VisualElement) Declaration public static void SetLeft(BindableObject view, VisualElement value) Parameters Type Name Description BindableObject view VisualElement value SetRight(BindableObject, VisualElement) Declaration public static void SetRight(BindableObject view, VisualElement value) Parameters Type Name Description BindableObject view VisualElement value SetUp(BindableObject, VisualElement) Declaration public static void SetUp(BindableObject view, VisualElement value) Parameters Type Name Description BindableObject view VisualElement value"
  },
  "api/Tizen.TV.UIControls.Forms.html": {
    "href": "api/Tizen.TV.UIControls.Forms.html",
    "title": "Namespace Tizen.TV.UIControls.Forms",
    "keywords": "Namespace Tizen.TV.UIControls.Forms Classes AnimatablePage Manages animated page transitions on push and pop. AnimatedContentPage A ContentPage that support animation when switching pages. AnimatedNavigationPage A Page that manages the navigation with custom animation and user-experience of a stack of other pages. BufferingProgressUpdatedEventArgs Internal use only. Contains arguments for the event that is raised when the buffering progress is updated. ContentButton The ContentButton is a Button, which allows you to customize the View to be displayed. ContentPopup The ContentPopup is a Popup, which allows you to customize the Layout to be displayed. ContentPopupManager DrawerLayout DrawerLayout is a kind of Layout that acts like a MasterDetailPage . DRMMediaSource DRMPropertyValue EmbeddingControls FileMediaSource A MediaSource that reads a media from a file. FileMediaSourceConverter A TypeConverter that converts to FileMediaSource. Focus FocusedItemChangedEventArgs Event arguments for the ItemFocused event. FocusFrame It is a container to decorate focused state GridView The GridView is a view to efficiently display a collections of data using DataTemplate GridViewFocusedEventArgs Arguments for the event that is raised when one item of GridView has received focus. InputEvents The InputEvents class helps developers to handle the remote control events that are emitted from TV devices. ItemRealizedEventArgs Event arguments for the ItemRealized event. ItemUnrealizedEventArgs Event arguments for the ItemUnrealized event. MediaPlayer MediaPlayer provieds the essential components to play the media contents. MediaSource Abstract class whose implementors load media contents from files or the Web. MediaSourceConverter Class that takes a string representation of a media file location and returns a MeidaSource from the specified resource. MediaView The MediaView class is an abstract class whose subclasses can be used to display the video output on the screen. OverlayMediaView An overlay MediaView. OverlayPage The OverlayPage class is used to display the video output on a page. RecycleItemsView A ScrollView that efficiently displays a collections of data using DataTemplate RemoteControlKeyEventArgs Arguments for the event that is raised when a remote control key is pressed or released. RemoteKeyHandler The RemoteKeyHandler contains a command and key events that react to remote controller events. UriMediaSource A MediaSource that loads a media from a URI Interfaces IContentPopupRenderer Base interface for ContentPopup renderer. IOverlayOutput Interface for defining the overlay type of output. IPlatformMediaPlayer For internal use by platform renderers. IRecycleItemsViewController This interface is for internal use. IVideoOutput Interface indicating the ouput type of the media. Enums DisplayAspectMode Enumerates values that define how a media content is displayed. DrawerMode Enumeration that specifies the DrawerMode DrawerPosition Enumeration that specifies the DrawerPosition PlaybackState Enumerates values that define the playback state of the media content. RecycleItemsViewOrientation The orientations the a RecycleItemsView can have. RemoteControlKeyNames Enumeration that specifies the remote control key names. RemoteControlKeyTypes Enumeration that specifies the remote control key types. VideoOuputType Enumeration that specifies the video ouput."
  },
  "api/Tizen.TV.UIControls.Forms.GridViewFocusedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.GridViewFocusedEventArgs.html",
    "title": "Class GridViewFocusedEventArgs",
    "keywords": "Class GridViewFocusedEventArgs Arguments for the event that is raised when one item of GridView has received focus. Inheritance System.Object GridViewFocusedEventArgs Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class GridViewFocusedEventArgs : FocusEventArgs Constructors GridViewFocusedEventArgs(Object, View, Boolean) Constructs a new GridViewFocusedEventArgs object. Declaration public GridViewFocusedEventArgs(object item, View targetView, bool isFocused) Parameters Type Name Description System.Object item View targetView System.Boolean isFocused Properties Item The focused item. Declaration public object Item { get; } Property Value Type Description System.Object"
  },
  "api/Tizen.TV.UIControls.Forms.IContentPopupRenderer.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IContentPopupRenderer.html",
    "title": "Interface IContentPopupRenderer",
    "keywords": "Interface IContentPopupRenderer Base interface for ContentPopup renderer. Inherited Members Tizen.Theme.Common.IContentPopupRenderer.SetElement(Tizen.Theme.Common.ContentPopup) Tizen.Theme.Common.IContentPopupRenderer.Open() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IContentPopupRenderer : IContentPopupRenderer, IDisposable"
  },
  "api/Tizen.TV.UIControls.Forms.FocusFrame.html": {
    "href": "api/Tizen.TV.UIControls.Forms.FocusFrame.html",
    "title": "Class FocusFrame",
    "keywords": "Class FocusFrame It is a container to decorate focused state Inheritance System.Object Tizen.Theme.Common.FocusFrame FocusFrame Inherited Members Tizen.Theme.Common.FocusFrame.FocusedColorProperty Tizen.Theme.Common.FocusFrame.UnfocusedColorProperty Tizen.Theme.Common.FocusFrame.ContentFocusedCommandProperty Tizen.Theme.Common.FocusFrame.ContentFocusedCommandParameterProperty Tizen.Theme.Common.FocusFrame.ContentUnfocusedCommandProperty Tizen.Theme.Common.FocusFrame.ContentUnfocusedCommandParameterProperty Tizen.Theme.Common.FocusFrame.IsContentFocusedProperty Tizen.Theme.Common.FocusFrame.ContentFocused Tizen.Theme.Common.FocusFrame.ContentUnfocused Tizen.Theme.Common.FocusFrame.ContentFocusedCommand Tizen.Theme.Common.FocusFrame.ContentFocusedCommandParameter Tizen.Theme.Common.FocusFrame.ContentUnfocusedCommand Tizen.Theme.Common.FocusFrame.ContentUnfocusedCommandParameter Tizen.Theme.Common.FocusFrame.FocusedColor Tizen.Theme.Common.FocusFrame.UnfocusedColor Tizen.Theme.Common.FocusFrame.IsContentFocused Tizen.Theme.Common.FocusFrame.OnPropertyChanging(System.String) Tizen.Theme.Common.FocusFrame.OnPropertyChanged(System.String) Tizen.Theme.Common.FocusFrame.OnContentFocused(System.Boolean) Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class FocusFrame : FocusFrame"
  },
  "api/Tizen.TV.UIControls.Forms.RecycleItemsViewOrientation.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RecycleItemsViewOrientation.html",
    "title": "Enum RecycleItemsViewOrientation",
    "keywords": "Enum RecycleItemsViewOrientation The orientations the a RecycleItemsView can have. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum RecycleItemsViewOrientation : int Fields Name Description Horizontal RecycleItemsView should be horizontally oriented. Vertical should be vertically oriented."
  },
  "api/Tizen.TV.UIControls.Forms.OverlayPage.html": {
    "href": "api/Tizen.TV.UIControls.Forms.OverlayPage.html",
    "title": "Class OverlayPage",
    "keywords": "Class OverlayPage The OverlayPage class is used to display the video output on a page. Inheritance System.Object Tizen.Theme.Common.OverlayPage OverlayPage Implements Tizen.Theme.Common.IOverlayOutput Tizen.Theme.Common.IVideoOutput Inherited Members Tizen.Theme.Common.OverlayPage.OverlayAreaProperty Tizen.Theme.Common.OverlayPage.PlayerProperty Tizen.Theme.Common.OverlayPage.OverlayArea Tizen.Theme.Common.OverlayPage.Player Tizen.Theme.Common.OverlayPage.Tizen.Theme.Common.IVideoOutput.MediaView Tizen.Theme.Common.OverlayPage.Tizen.Theme.Common.IVideoOutput.Controller Tizen.Theme.Common.OverlayPage.AreaUpdated Tizen.Theme.Common.OverlayPage.LayoutChildren(System.Double, System.Double, System.Double, System.Double) Tizen.Theme.Common.OverlayPage.OnPropertyChanged(System.String) Tizen.Theme.Common.OverlayPage.OnBindingContextChanged() Tizen.Theme.Common.OverlayPage.OuputType Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class OverlayPage : OverlayPage, IOverlayOutput, IVideoOutput Implements Tizen.Theme.Common.IOverlayOutput Tizen.Theme.Common.IVideoOutput"
  },
  "api/Tizen.TV.UIControls.Forms.BufferingProgressUpdatedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.BufferingProgressUpdatedEventArgs.html",
    "title": "Class BufferingProgressUpdatedEventArgs",
    "keywords": "Class BufferingProgressUpdatedEventArgs Internal use only. Contains arguments for the event that is raised when the buffering progress is updated. Inheritance System.Object Tizen.Theme.Common.BufferingProgressUpdatedEventArgs BufferingProgressUpdatedEventArgs Inherited Members Tizen.Theme.Common.BufferingProgressUpdatedEventArgs.Progress Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class BufferingProgressUpdatedEventArgs : BufferingProgressUpdatedEventArgs"
  },
  "api/Tizen.TV.UIControls.Forms.IPlatformMediaPlayer.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IPlatformMediaPlayer.html",
    "title": "Interface IPlatformMediaPlayer",
    "keywords": "Interface IPlatformMediaPlayer For internal use by platform renderers. Inherited Members Tizen.Theme.Common.IPlatformMediaPlayer.UsesEmbeddingControls Tizen.Theme.Common.IPlatformMediaPlayer.AutoPlay Tizen.Theme.Common.IPlatformMediaPlayer.AutoStop Tizen.Theme.Common.IPlatformMediaPlayer.Volume Tizen.Theme.Common.IPlatformMediaPlayer.IsMuted Tizen.Theme.Common.IPlatformMediaPlayer.IsLooping Tizen.Theme.Common.IPlatformMediaPlayer.Position Tizen.Theme.Common.IPlatformMediaPlayer.Duration Tizen.Theme.Common.IPlatformMediaPlayer.AspectMode Tizen.Theme.Common.IPlatformMediaPlayer.PlaybackCompleted Tizen.Theme.Common.IPlatformMediaPlayer.PlaybackStarted Tizen.Theme.Common.IPlatformMediaPlayer.PlaybackPaused Tizen.Theme.Common.IPlatformMediaPlayer.PlaybackStopped Tizen.Theme.Common.IPlatformMediaPlayer.UpdateStreamInfo Tizen.Theme.Common.IPlatformMediaPlayer.BufferingProgressUpdated Tizen.Theme.Common.IPlatformMediaPlayer.SetDisplay(Tizen.Theme.Common.IVideoOutput) Tizen.Theme.Common.IPlatformMediaPlayer.SetSource(Tizen.Theme.Common.MediaSource) Tizen.Theme.Common.IPlatformMediaPlayer.Start() Tizen.Theme.Common.IPlatformMediaPlayer.Stop() Tizen.Theme.Common.IPlatformMediaPlayer.Pause() Tizen.Theme.Common.IPlatformMediaPlayer.Seek(System.Int32) Tizen.Theme.Common.IPlatformMediaPlayer.GetAlbumArts() Tizen.Theme.Common.IPlatformMediaPlayer.GetMetadata() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IPlatformMediaPlayer : IPlatformMediaPlayer"
  },
  "api/Tizen.TV.UIControls.Forms.OverlayMediaView.html": {
    "href": "api/Tizen.TV.UIControls.Forms.OverlayMediaView.html",
    "title": "Class OverlayMediaView",
    "keywords": "Class OverlayMediaView An overlay MediaView. Inheritance System.Object Tizen.Theme.Common.MediaView Tizen.Theme.Common.OverlayMediaView OverlayMediaView Implements Tizen.Theme.Common.IOverlayOutput Tizen.Theme.Common.IVideoOutput Inherited Members Tizen.Theme.Common.OverlayMediaView.OverlayAreaProperty Tizen.Theme.Common.OverlayMediaView.AreaUpdated Tizen.Theme.Common.OverlayMediaView.OverlayArea Tizen.Theme.Common.OverlayMediaView.OuputType Tizen.Theme.Common.OverlayMediaView.OnPropertyChanged(System.String) Tizen.Theme.Common.MediaView.PlayerProperty Tizen.Theme.Common.MediaView.Player Tizen.Theme.Common.MediaView.Tizen.Theme.Common.IVideoOutput.MediaView Tizen.Theme.Common.MediaView.Tizen.Theme.Common.IVideoOutput.Controller Tizen.Theme.Common.MediaView.LayoutChildren(System.Double, System.Double, System.Double, System.Double) Tizen.Theme.Common.MediaView.OnMeasure(System.Double, System.Double) Tizen.Theme.Common.MediaView.OnBindingContextChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class OverlayMediaView : OverlayMediaView, IOverlayOutput, IVideoOutput Implements Tizen.Theme.Common.IOverlayOutput Tizen.Theme.Common.IVideoOutput"
  },
  "api/Tizen.TV.UIControls.Forms.GridView.html": {
    "href": "api/Tizen.TV.UIControls.Forms.GridView.html",
    "title": "Class GridView",
    "keywords": "Class GridView The GridView is a view to efficiently display a collections of data using DataTemplate Inheritance System.Object Tizen.Theme.Common.GridView GridView Implements Tizen.Theme.Common.IGridViewController IViewController Inherited Members Tizen.Theme.Common.GridView.ItemsSourceProperty Tizen.Theme.Common.GridView.ItemTemplateProperty Tizen.Theme.Common.GridView.ItemHeightProperty Tizen.Theme.Common.GridView.ItemWidthProperty Tizen.Theme.Common.GridView.OrientationProperty Tizen.Theme.Common.GridView.HorizontalScrollBarVisibleProperty Tizen.Theme.Common.GridView.VerticalScrollBarVisibleProperty Tizen.Theme.Common.GridView.SelectedItemProperty Tizen.Theme.Common.GridView.ItemHorizontalAlignmentProperty Tizen.Theme.Common.GridView.ItemVerticalAlignmentProperty Tizen.Theme.Common.GridView.ItemSelected Tizen.Theme.Common.GridView.ItemFocused Tizen.Theme.Common.GridView.ItemsSource Tizen.Theme.Common.GridView.ItemTemplate Tizen.Theme.Common.GridView.ItemHeight Tizen.Theme.Common.GridView.ItemWidth Tizen.Theme.Common.GridView.ItemHorizontalAlignment Tizen.Theme.Common.GridView.ItemVerticalAlignment Tizen.Theme.Common.GridView.SelectedItem Tizen.Theme.Common.GridView.ThemeStyle Tizen.Theme.Common.GridView.Orientation Tizen.Theme.Common.GridView.HorizontalScrollBarVisible Tizen.Theme.Common.GridView.VerticalScrollBarVisible Tizen.Theme.Common.GridView.SendItemFocused(Tizen.Theme.Common.GridViewFocusedEventArgs) Tizen.Theme.Common.GridView.SendItemSelected(SelectedItemChangedEventArgs) Tizen.Theme.Common.GridView.ValidateItemTemplate(DataTemplate) Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class GridView : GridView, IGridViewController, IViewController Implements Tizen.Theme.Common.IGridViewController IViewController"
  },
  "api/Tizen.TV.UIControls.Forms.MediaView.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaView.html",
    "title": "Class MediaView",
    "keywords": "Class MediaView The MediaView class is an abstract class whose subclasses can be used to display the video output on the screen. Inheritance System.Object Tizen.Theme.Common.MediaView MediaView Implements Tizen.Theme.Common.IVideoOutput Inherited Members Tizen.Theme.Common.MediaView.PlayerProperty Tizen.Theme.Common.MediaView.Player Tizen.Theme.Common.MediaView.OuputType Tizen.Theme.Common.MediaView.Tizen.Theme.Common.IVideoOutput.MediaView Tizen.Theme.Common.MediaView.Tizen.Theme.Common.IVideoOutput.Controller Tizen.Theme.Common.MediaView.LayoutChildren(System.Double, System.Double, System.Double, System.Double) Tizen.Theme.Common.MediaView.OnMeasure(System.Double, System.Double) Tizen.Theme.Common.MediaView.OnBindingContextChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public abstract class MediaView : MediaView, IVideoOutput Implements Tizen.Theme.Common.IVideoOutput"
  },
  "api/Tizen.TV.UIControls.Forms.ContentPopupManager.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ContentPopupManager.html",
    "title": "Class ContentPopupManager",
    "keywords": "Class ContentPopupManager Inheritance System.Object ContentPopupManager Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public static class ContentPopupManager : object Methods ShowPopup(INavigation, ContentPopup) Declaration public static Task ShowPopup(this INavigation navigation, ContentPopup popup) Parameters Type Name Description INavigation navigation ContentPopup popup Returns Type Description Task ShowPopup(ContentPopup) Declaration public static Task ShowPopup(ContentPopup popup) Parameters Type Name Description ContentPopup popup Returns Type Description Task"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteControlKeyTypes.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteControlKeyTypes.html",
    "title": "Enum RemoteControlKeyTypes",
    "keywords": "Enum RemoteControlKeyTypes Enumeration that specifies the remote control key types. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum RemoteControlKeyTypes : int Fields Name Description KeyDown The Key down event type. KeyUp The Key up event type."
  },
  "guides/MediaPlayer_Introduction.html": {
    "href": "guides/MediaPlayer_Introduction.html",
    "title": "MediaPlayer",
    "keywords": "MediaPlayer Introduction MediaPlayer provides functionality of playing multimedia. It also includes related view components that display video stream. How to use C# var page = new OverlayPage(); var player = new MediaPlayer(); player.VideoOutput = page; player.Source = \"a.mp4\"; player.Start(); XAML <tvcontrols:OverlayPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:tvcontrols=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" xmlns:local=\"Sample.TestOverlayPage\" x:Class=\"Sample.TestOverlayPage\"> <tvcontrols:OverlayPage.Player> <tvcontrols:MediaPlayer Source=\"{Binding Source}\" AutoPlay=\"true\" UsesEmbeddingControls=\"False\"/> </tvcontrols:OverlayPage.Player> </tvcontrols:OverlayPage> PlaybackState MediaPlayer has a PlaybackState. Some APIs only work on the certain state and some APIs transit the state. State diagram of PlaybackState Video output type Overlay It displays video data on the overlay plane. It is more efficient and fast but has a limit shape. Usually it is used to display the video as fullscreen. OverlayPage OverlayMediaView Associating Player with media view MediaPlayer and video output are created independently. The developer needs to associate Player and the video output to display video data. Use Player property of OverlayMediaView <tvcontrols:OverlayMediaView> <tvcontrols:OverlayMediaView.Player> <tvcontrols:MediaPlayer Source=\"{Binding Source}\"/> </tvcontrols:OverlayMediaView.Player> </tvcontrols:OverlayMediaView> var overlayMediaView = new OverlayMediaView(); overlayMediaView.Player = new MediaPlayer(); Use VideoOutput property of Player var player = new MediaPlayer(); player.VideoOutput = new OverlayPage(); Embedding controls By default, MediaPlayer provides an embedding control. If you don't want to use the default embedding controls, set UsesEmbeddingControls to false. public bool UsesEmbeddingControls AutoPlay/AutoStop Video can't play before media view is shown, so you need to know when the media views are available. If you use AutoPlay/AutoStop property, you don't need to care about the view state. AutoPlay public bool AutoPlay Automatically starts a player when a View is shown (Rendered). AutoStop public bool AutoStop Automatically stops a player when a View is gone (Renderer was disposed). Related Links Sample"
  },
  "guides/RecycleItemsView_CustomEffect.html": {
    "href": "guides/RecycleItemsView_CustomEffect.html",
    "title": "Focus with header footer",
    "keywords": "RecycleItemsView provides a default focusing effect that is scaling to 1.2. If you want to change this behavior, you need to inherit RecycleItemsView and override OnItemFocused method. protected virtual void OnItemFocused(object data, View targetView, bool isFocused); When you need to apply the focusing effect, we call this method with the focused view. data is a FocusedItem in ItemsSource targetView is a realized view that is created by ItemTemplate isFocused is about whether focus or not. You need to implement Focused and Unfocused cases. If not, all views will be shown as focused. Focus with header footer Header/Footer also can get a focus and triggered OnItemFocused when focused. Therefore, if you want to know if a focused view is the header or not, compare the data parameter with Header property. Custom Fouse Effect example <local:MyRecycleItemsView ...> <tvcontrols:RecycleItemsView.ItemTemplate> <DataTemplate> <AbsoluteLayout> <Image Source=\"{Binding Source}\" Aspect=\"Fill\" AbsoluteLayout.LayoutBounds=\"0, 0, 1, 1\" AbsoluteLayout.LayoutFlags=\"All\"/> <StackLayout Padding=\"20\" BackgroundColor=\"#aa000000\" AbsoluteLayout.LayoutBounds=\"0, 1, 480, 100\" AbsoluteLayout.LayoutFlags=\"PositionProportional\"> <Label Text=\"{Binding Text}\" TextColor=\"AntiqueWhite\" FontSize=\"70\" FontAttributes=\"Bold\" /> <Label Text=\"{Binding DetailText}\" FontSize=\"40\"/> </StackLayout> </AbsoluteLayout> </DataTemplate> </tvcontrols:RecycleItemsView.ItemTemplate> </local:MyRecycleItemsView> protected override void OnItemFocused(object data, View targetView, bool isFocused) { AbsoluteLayout layout = (AbsoluteLayout)targetView; View textarea = layout.Children[1]; if (isFocused) { targetView.ScaleTo(1.2); var animation = new Animation((rate) => { AbsoluteLayout.SetLayoutBounds(textarea, new Rectangle(0, 1, 480, 100 + rate * 100)); }); animation.Commit(this, $\"Focused - {data.GetHashCode()}\"); } else { targetView.ScaleTo(1.0); var animation = new Animation((rate) => { AbsoluteLayout.SetLayoutBounds(textarea, new Rectangle(0, 1, 480, 200 - rate * 100)); }); animation.Commit(this, $\"Focused - {data.GetHashCode()}\"); } } When the Item is focused, text area will grow up to 200px. We are able to know a type of View, because it was created by ItemTemplate . So, we can get a StackLayout object and make it larger."
  },
  "guides/FocusFrame.html": {
    "href": "guides/FocusFrame.html",
    "title": "FocusFrame",
    "keywords": "FocusFrame FocusFrame helps developers to decorate a focused view. it contain a view to represent and if it got a focus, backgroud color of FocusFrame is changed How to use it Set a Content property using a view that a target of focus, set FocusedColor to want. (default color is Orange) xaml <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:tv=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" x:Class=\"Sample.FocusFrameTest\" x:Name=\"rootPage\"> <ContentPage.Content> <StackLayout> <tv:FocusFrame FocusedColor=\"Blue\"> <Button Text=\"Button1\"/> </tv:FocusFrame> </StackLayout> </ContentPage.Content> </ContentPage> C# public class FocusFrameTest : ContentPage { public FocusFrameTest() { Button button1 = new Button { Text = \"Button1\" }; FocusFrame focusFrame = new FocusFrame { FocusedColor = Color.Blue, Content = Button1 }; Content = new StackLayout { Children = { focusFrame, } }; } } How to override the focus effect Overriding OnContentFocused method and implements decorating code public class MyFocusFrame : FocusFrame { protected override void OnContentFocused(bool isFocused) { if (isFocused) { Content.ScaleTo(1.5); } else { Content.ScaleTo(1); } } } <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:tv=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" xmlns:local=\"clr-namespace:Sample.Focus\" x:Class=\"Sample.FocusFrameTest\"> <ContentPage.Content> <StackLayout> <local:MyFocusFrame> <Button Text=\"Button1\"/> </tv:MyFocusFrame> </StackLayout> </ContentPage.Content> </ContentPage>"
  },
  "api/Tizen.TV.UIControls.Forms.RecycleItemsView.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RecycleItemsView.html",
    "title": "Class RecycleItemsView",
    "keywords": "Class RecycleItemsView A ScrollView that efficiently displays a collections of data using DataTemplate Inheritance System.Object RecycleItemsView Implements IRecycleItemsViewController Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class RecycleItemsView : ContentView, IRecycleItemsViewController Constructors RecycleItemsView() Creates and initializes a new instance of the RecycleItemsView class. Declaration public RecycleItemsView() Fields AllowFocusFooterProperty Backing store for the AllowFocusFooter property. Declaration public static readonly BindableProperty AllowFocusFooterProperty Field Value Type Description BindableProperty AllowFocusHeaderProperty Backing store for the AllowFocusHeader property. Declaration public static readonly BindableProperty AllowFocusHeaderProperty Field Value Type Description BindableProperty ColumnCountProperty Backing store for the ColumnCount property. Declaration public static readonly BindableProperty ColumnCountProperty Field Value Type Description BindableProperty ContentMarginProperty Backing store for the ContentMargin property. Declaration public static readonly BindableProperty ContentMarginProperty Field Value Type Description BindableProperty FocusedItemProperty Backing store for the FocusedItem property. Declaration public static readonly BindableProperty FocusedItemProperty Field Value Type Description BindableProperty FooterProperty Backing store for the Footer property. Declaration public static readonly BindableProperty FooterProperty Field Value Type Description BindableProperty FooterTemplateProperty Backing store for the FooterTemplate property. Declaration public static readonly BindableProperty FooterTemplateProperty Field Value Type Description BindableProperty HeaderProperty Backing store for the Header property. Declaration public static readonly BindableProperty HeaderProperty Field Value Type Description BindableProperty HeaderTemplateProperty Backing store for the HeaderTemplate property. Declaration public static readonly BindableProperty HeaderTemplateProperty Field Value Type Description BindableProperty ItemHeightProperty Backing store for the ItemHeight property. Declaration public static readonly BindableProperty ItemHeightProperty Field Value Type Description BindableProperty ItemsSourceProperty Backing store for the ItemsSource property. Declaration public static readonly BindableProperty ItemsSourceProperty Field Value Type Description BindableProperty ItemTemplateProperty Backing store for the ItemTemplate property. Declaration public static readonly BindableProperty ItemTemplateProperty Field Value Type Description BindableProperty ItemWidthProperty Backing store for the ItemWidth property. Declaration public static readonly BindableProperty ItemWidthProperty Field Value Type Description BindableProperty OrientationProperty Backing store for the Orientation property. Declaration public static readonly BindableProperty OrientationProperty Field Value Type Description BindableProperty ScrollBarVisibilityProperty Backing store for the ScrollBarVisibility property. Declaration public static readonly BindableProperty ScrollBarVisibilityProperty Field Value Type Description BindableProperty ScrollPolicyProperty Backing store for the ScrollPolicy property. Declaration public static readonly BindableProperty ScrollPolicyProperty Field Value Type Description BindableProperty SelectedItemProperty Backing store for the SelectedItem property. Declaration public static readonly BindableProperty SelectedItemProperty Field Value Type Description BindableProperty SpacingProperty Backing store for the Spacing property. Declaration public static readonly BindableProperty SpacingProperty Field Value Type Description BindableProperty Properties AllowFocusFooter Gets or sets the focusable on footer Declaration public bool AllowFocusFooter { get; set; } Property Value Type Description System.Boolean AllowFocusHeader Gets or sets the focusable on header Declaration public bool AllowFocusHeader { get; set; } Property Value Type Description System.Boolean ColumnCount Gets or sets the count of columns. Declaration public int ColumnCount { get; set; } Property Value Type Description System.Int32 ContentMargin Gets or sets the margin for the content. Declaration public Thickness ContentMargin { get; set; } Property Value Type Description Thickness FocusedItem Gets or sets the currently focused item from the ItemsSource. Declaration public object FocusedItem { get; set; } Property Value Type Description System.Object Footer Gets or sets the binding, or view that will be displayed at the last of the items. Declaration public object Footer { get; set; } Property Value Type Description System.Object FooterElement Gets instantiated Footer view Declaration public View FooterElement { get; protected set; } Property Value Type Description View FooterTemplate Gets or sets a data template to use to format a data object for display Footer. Declaration public DataTemplate FooterTemplate { get; set; } Property Value Type Description DataTemplate Header Gets or sets the binding, or view that will be displayed at the first of the items. Declaration public object Header { get; set; } Property Value Type Description System.Object HeaderElement Gets instantiated Header view Declaration public View HeaderElement { get; protected set; } Property Value Type Description View HeaderTemplate Gets or sets a data template to use to format a data object for display Header. Declaration public DataTemplate HeaderTemplate { get; set; } Property Value Type Description DataTemplate ItemHeight Gets or sets a value that represents the height of an item. Declaration public double ItemHeight { get; set; } Property Value Type Description System.Double ItemsSource Gets or sets the source of items to template and display. Declaration public IEnumerable ItemsSource { get; set; } Property Value Type Description IEnumerable ItemTemplate Gets or sets the DataTemplate to apply to the ItemsSource. Declaration public DataTemplate ItemTemplate { get; set; } Property Value Type Description DataTemplate ItemWidth Gets or sets a value that represents the width of an item. Declaration public double ItemWidth { get; set; } Property Value Type Description System.Double Orientation Gets or sets the value which indicates the direction which items are positioned. Declaration public RecycleItemsViewOrientation Orientation { get; set; } Property Value Type Description RecycleItemsViewOrientation RedundantItemCount declare the number of items to make redundant. Declaration protected virtual int RedundantItemCount { get; } Property Value Type Description System.Int32 ScrollBarVisibility Gets or sets the scroll bar visibility. Declaration public ScrollBarVisibility ScrollBarVisibility { get; set; } Property Value Type Description ScrollBarVisibility ScrollPolicy Gets or sets the scroll position policy. Declaration public ScrollToPosition ScrollPolicy { get; set; } Property Value Type Description ScrollToPosition ScrollView Gets the ScrollView internally created. Declaration protected ScrollView ScrollView { get; } Property Value Type Description ScrollView SelectedItem Gets or sets the currently selected item from the ItemsSource. Declaration public object SelectedItem { get; set; } Property Value Type Description System.Object Spacing Gets or sets a value which indicates the amount of space between each item. Declaration public double Spacing { get; set; } Property Value Type Description System.Double Methods CreateScrollView() Create a ScrollView that used in RecycleItemsView. Declaration protected virtual ScrollView CreateScrollView() Returns Type Description ScrollView ScrollView InitializeComponent() Declaration protected void InitializeComponent() LayoutChildren(Double, Double, Double, Double) Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description System.Double x System.Double y System.Double width System.Double height OnItemFocused(Object, View, Boolean) Called when Item is focused Declaration protected virtual void OnItemFocused(object data, View targetView, bool isFocused) Parameters Type Name Description System.Object data The focused item from the ItemsSource. View targetView Instantiated View System.Boolean isFocused Whether or not focused OnMeasure(Double, Double) Declaration protected override SizeRequest OnMeasure(double widthConstraint, double heightConstraint) Parameters Type Name Description System.Double widthConstraint System.Double heightConstraint Returns Type Description SizeRequest OnSizeAllocated(Double, Double) Declaration protected override void OnSizeAllocated(double width, double height) Parameters Type Name Description System.Double width System.Double height ScrollToAsync(Double, Double, Boolean) Returns a task that scrolls the scroll view to a position asynchronously. Declaration public Task ScrollToAsync(double x, double y, bool animation) Parameters Type Name Description System.Double x The X position of the finished scroll. System.Double y The Y position of the finished scroll. System.Boolean animation Whether or not to animate the scroll. Returns Type Description Task Task ScrollToAsync(Object, ScrollToPosition, Boolean) Returns a task that scrolls the scroll view to an item asynchronously. Declaration public Task ScrollToAsync(object item, ScrollToPosition position, bool animation) Parameters Type Name Description System.Object item The item to scroll. ScrollToPosition position The scroll position. System.Boolean animation Whether or not to animate the scroll. Returns Type Description Task Task Events ItemFocused Event that is raised when a new item is focused. Declaration public event EventHandler<FocusedItemChangedEventArgs> ItemFocused Event Type Type Description EventHandler < FocusedItemChangedEventArgs > ItemRealized Event that is raised when a item's view is attached the RecycleItemsView. Declaration public event EventHandler<ItemRealizedEventArgs> ItemRealized Event Type Type Description EventHandler < ItemRealizedEventArgs > ItemSelected Event that is raised when a new item is selected. Declaration public event EventHandler<SelectedItemChangedEventArgs> ItemSelected Event Type Type Description EventHandler < SelectedItemChangedEventArgs > ItemUnrealized Event that is raised when a item's view is detached the RecycleItemsView. Declaration public event EventHandler<ItemUnrealizedEventArgs> ItemUnrealized Event Type Type Description EventHandler < ItemUnrealizedEventArgs > Explicit Interface Implementations IRecycleItemsViewController.FocusedView Declaration View IRecycleItemsViewController.FocusedView { get; } Returns Type Description View IRecycleItemsViewController.ScrollBounds Declaration Rectangle IRecycleItemsViewController.ScrollBounds { get; } Returns Type Description Rectangle IRecycleItemsViewController.SendKeyDown(String) Declaration bool IRecycleItemsViewController.SendKeyDown(string keyname) Parameters Type Name Description System.String keyname Returns Type Description System.Boolean Implements IRecycleItemsViewController"
  },
  "api/Tizen.TV.UIControls.Forms.AnimatablePage.html": {
    "href": "api/Tizen.TV.UIControls.Forms.AnimatablePage.html",
    "title": "Class AnimatablePage",
    "keywords": "Class AnimatablePage Manages animated page transitions on push and pop. Inheritance System.Object AnimatablePage Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public static class AnimatablePage : object Fields PopAnimationLengthProperty Identifies the PopAnimationLength bindable property. Declaration public static readonly BindableProperty PopAnimationLengthProperty Field Value Type Description BindableProperty PopAnimationProperty Identifies the PopAnimation bindable property. Declaration public static readonly BindableProperty PopAnimationProperty Field Value Type Description BindableProperty PopAnimationRateProperty Identifies the PopAnimationRate bindable property. Declaration public static readonly BindableProperty PopAnimationRateProperty Field Value Type Description BindableProperty PushAnimationLengthProperty Identifies the PushAnimationLength bindable property. Declaration public static readonly BindableProperty PushAnimationLengthProperty Field Value Type Description BindableProperty PushAnimationProperty Identifies the PushAnimation bindable property. Declaration public static readonly BindableProperty PushAnimationProperty Field Value Type Description BindableProperty PushAnimationRateProperty Identifies the PushAnimationRate bindable property. Declaration public static readonly BindableProperty PushAnimationRateProperty Field Value Type Description BindableProperty Methods GetPopAnimation(Page) Get the pop animation. Declaration public static Animation GetPopAnimation(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description Animation GetPopAnimationLength(Page) Get the pop animation length. Declaration public static uint GetPopAnimationLength(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description System.UInt32 GetPopAnimationRate(Page) Get the pop animation rate. Declaration public static uint GetPopAnimationRate(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description System.UInt32 GetPushAnimation(Page) Get the push animation. Declaration public static Animation GetPushAnimation(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description Animation GetPushAnimationLength(Page) Get the push animation length. Declaration public static uint GetPushAnimationLength(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description System.UInt32 GetPushAnimationRate(Page) Get the push animation rate. Declaration public static uint GetPushAnimationRate(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description System.UInt32 SetPopAnimation(Page, Animation) Set the push animation. Declaration public static void SetPopAnimation(this Page page, Animation value) Parameters Type Name Description Page page The page to be animated Animation value The pop animation SetPopAnimationLength(Page, UInt32) Set the pop animation length. Declaration public static void SetPopAnimationLength(this Page page, uint value) Parameters Type Name Description Page page The page to be animated System.UInt32 value The pop animation length SetPopAnimationRate(Page, UInt32) Set the pop animation rate. Declaration public static void SetPopAnimationRate(this Page page, uint value) Parameters Type Name Description Page page The page to be animated System.UInt32 value The pop animation rate SetPushAnimation(Page, Animation) Set the push animation. Declaration public static void SetPushAnimation(this Page page, Animation value) Parameters Type Name Description Page page The page to be animated Animation value The push animation SetPushAnimationLength(Page, UInt32) Set the push animation length. Declaration public static void SetPushAnimationLength(this Page page, uint value) Parameters Type Name Description Page page The page to be animated System.UInt32 value The push animation length SetPushAnimationRate(Page, UInt32) Set the push animation rate. Declaration public static void SetPushAnimationRate(this Page page, uint value) Parameters Type Name Description Page page The page to be animated System.UInt32 value The push animation rate"
  },
  "api/Tizen.TV.UIControls.Forms.DrawerMode.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DrawerMode.html",
    "title": "Enum DrawerMode",
    "keywords": "Enum DrawerMode Enumeration that specifies the DrawerMode Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum DrawerMode : int Fields Name Description Overlap Drawer view is overlapped above content view Panning Content view is moved to side Resize Content view is resized to open drawer view"
  },
  "api/Tizen.TV.UIControls.Forms.VideoOuputType.html": {
    "href": "api/Tizen.TV.UIControls.Forms.VideoOuputType.html",
    "title": "Enum VideoOuputType",
    "keywords": "Enum VideoOuputType Enumeration that specifies the video ouput. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum VideoOuputType : int Fields Name Description Buffer A buffer type. Overlay An overlay type."
  },
  "api/Tizen.TV.UIControls.Forms.ContentPopup.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ContentPopup.html",
    "title": "Class ContentPopup",
    "keywords": "Class ContentPopup The ContentPopup is a Popup, which allows you to customize the Layout to be displayed. Inheritance System.Object Tizen.Theme.Common.ContentPopup ContentPopup Inherited Members Tizen.Theme.Common.ContentPopup.ContentProperty Tizen.Theme.Common.ContentPopup.IsOpenProperty Tizen.Theme.Common.ContentPopup.BackgroundColorProperty Tizen.Theme.Common.ContentPopup.Dismissed Tizen.Theme.Common.ContentPopup.Content Tizen.Theme.Common.ContentPopup.IsOpen Tizen.Theme.Common.ContentPopup.BackgroundColor Tizen.Theme.Common.ContentPopup.Dismiss() Tizen.Theme.Common.ContentPopup.SendDismissed() Tizen.Theme.Common.ContentPopup.SendBackButtonPressed() Tizen.Theme.Common.ContentPopup.OnBackButtonPressed() Tizen.Theme.Common.ContentPopup.OnBindingContextChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ContentPopup : ContentPopup"
  },
  "api/Tizen.TV.UIControls.Forms.FileMediaSourceConverter.html": {
    "href": "api/Tizen.TV.UIControls.Forms.FileMediaSourceConverter.html",
    "title": "Class FileMediaSourceConverter",
    "keywords": "Class FileMediaSourceConverter A TypeConverter that converts to FileMediaSource. Inheritance System.Object FileMediaSourceConverter Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class FileMediaSourceConverter : TypeConverter Methods ConvertFromInvariantString(String) Creates a file media source given a path to a media. Declaration public override object ConvertFromInvariantString(string value) Parameters Type Name Description System.String value The value to convert. Returns Type Description System.Object FileMediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.DRMMediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DRMMediaSource.html",
    "title": "Class DRMMediaSource",
    "keywords": "Class DRMMediaSource Inheritance System.Object Tizen.Theme.Common.MediaSource Tizen.Theme.Common.UriMediaSource DRMMediaSource Inherited Members Tizen.Theme.Common.UriMediaSource.UriProperty Tizen.Theme.Common.UriMediaSource.Uri Tizen.Theme.Common.UriMediaSource.ToString() Tizen.Theme.Common.UriMediaSource.OnPropertyChanged(System.String) Tizen.Theme.Common.MediaSource.FromFile(System.String) Tizen.Theme.Common.MediaSource.FromUri(System.Uri) Tizen.Theme.Common.MediaSource.OnSourceChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class DRMMediaSource : UriMediaSource Properties ExtraData Declaration public Dictionary<string, DRMPropertyValue> ExtraData { get; } Property Value Type Description Dictionary < System.String , DRMPropertyValue > LicenseUrl Declaration public string LicenseUrl { get; set; } Property Value Type Description System.String"
  },
  "api/Tizen.TV.UIControls.Forms.ItemRealizedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ItemRealizedEventArgs.html",
    "title": "Class ItemRealizedEventArgs",
    "keywords": "Class ItemRealizedEventArgs Event arguments for the ItemRealized event. Inheritance System.Object ItemRealizedEventArgs Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ItemRealizedEventArgs : EventArgs Properties Item The attached item. Declaration public object Item { get; set; } Property Value Type Description System.Object RealizedView The attached view. Declaration public View RealizedView { get; set; } Property Value Type Description View"
  },
  "api/Tizen.TV.UIControls.Forms.FileMediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.FileMediaSource.html",
    "title": "Class FileMediaSource",
    "keywords": "Class FileMediaSource A MediaSource that reads a media from a file. Inheritance System.Object MediaSource FileMediaSource Inherited Members MediaSource.FromFile(String) MediaSource.FromUri(Uri) MediaSource.OnSourceChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class FileMediaSource : MediaSource Fields FileProperty Identifies the File bindable property. Declaration public static readonly BindableProperty FileProperty Field Value Type Description BindableProperty Properties File Gets or sets the file from which this FileMediaSource will load a media. Declaration public string File { get; set; } Property Value Type Description System.String Methods OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName ToString() Returns a string representation of File . Declaration public override string ToString() Returns Type Description System.String Operators Implicit(String to FileMediaSource) Allows implicit casting from a string. Declaration public static implicit operator FileMediaSource(string file) Parameters Type Name Description System.String file Returns Type Description FileMediaSource Implicit(FileMediaSource to String) Allows implicit casting to a string. Declaration public static implicit operator string (FileMediaSource file) Parameters Type Name Description FileMediaSource file Returns Type Description System.String"
  },
  "api/Tizen.TV.UIControls.Forms.MediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaSource.html",
    "title": "Class MediaSource",
    "keywords": "Class MediaSource Abstract class whose implementors load media contents from files or the Web. Inheritance System.Object MediaSource FileMediaSource UriMediaSource Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public abstract class MediaSource : Element Constructors MediaSource() Declaration protected MediaSource() Methods FromFile(String) Returns a new MediaSource that reads from file. Declaration public static MediaSource FromFile(string file) Parameters Type Name Description System.String file The file path to use as a media source. Returns Type Description MediaSource Returns the MediaSource. FromUri(Uri) Returns a new MediaSource that reads from uri. Declaration public static MediaSource FromUri(Uri uri) Parameters Type Name Description Uri uri The uri path to use as a media source. Returns Type Description MediaSource Returns the MediaSource. OnSourceChanged() Declaration protected void OnSourceChanged() Operators Implicit(String to MediaSource) Declaration public static implicit operator MediaSource(string source) Parameters Type Name Description System.String source Returns Type Description MediaSource Implicit(Uri to MediaSource) Declaration public static implicit operator MediaSource(Uri uri) Parameters Type Name Description Uri uri Returns Type Description MediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.IOverlayOutput.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IOverlayOutput.html",
    "title": "Interface IOverlayOutput",
    "keywords": "Interface IOverlayOutput Interface for defining the overlay type of output. Inherited Members IVideoOutput.MediaView IVideoOutput.Controller IVideoOutput.OuputType Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IOverlayOutput : IVideoOutput Properties OverlayArea Declaration Rectangle OverlayArea { get; } Property Value Type Description Rectangle Events AreaUpdated Declaration event EventHandler AreaUpdated Event Type Type Description EventHandler"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteKeyHandler.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteKeyHandler.html",
    "title": "Class RemoteKeyHandler",
    "keywords": "Class RemoteKeyHandler The RemoteKeyHandler contains a command and key events that react to remote controller events. Inheritance System.Object RemoteKeyHandler Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class RemoteKeyHandler : BindableObject Constructors RemoteKeyHandler() Initializes a new instance of the RemoteKeyHandler class. Declaration public RemoteKeyHandler() RemoteKeyHandler(Action<RemoteControlKeyEventArgs>) Initializes a new instance of the RemoteKeyHandler class with its action which is set to Command. Declaration public RemoteKeyHandler(Action<RemoteControlKeyEventArgs> action) Parameters Type Name Description Action < RemoteControlKeyEventArgs > action An action to invoke when the remote control event is activated. RemoteKeyHandler(Action<RemoteControlKeyEventArgs>, RemoteControlKeyTypes) Initializes a new instance of the RemoteKeyHandler class with its action which is set to Command and key type. Declaration public RemoteKeyHandler(Action<RemoteControlKeyEventArgs> action, RemoteControlKeyTypes keyType) Parameters Type Name Description Action < RemoteControlKeyEventArgs > action An action to invoke when the remote control event with the specifiec key type is invoked. RemoteControlKeyTypes keyType A key type to invoke the action. Fields CommandProperty Backing store for the Command bindable property. Declaration public static readonly BindableProperty CommandProperty Field Value Type Description BindableProperty Properties Command Gets or sets a command that invokes when the remote control key event is emitted. Declaration public ICommand Command { get; set; } Property Value Type Description ICommand Methods SendKeyEvent(RemoteControlKeyEventArgs) Declaration public void SendKeyEvent(RemoteControlKeyEventArgs args) Parameters Type Name Description RemoteControlKeyEventArgs args Events KeyDown Occurs when the remote control key is pressed. Declaration public event EventHandler<RemoteControlKeyEventArgs> KeyDown Event Type Type Description EventHandler < RemoteControlKeyEventArgs > KeyUp Occurs when the remote control key is released. Declaration public event EventHandler<RemoteControlKeyEventArgs> KeyUp Event Type Type Description EventHandler < RemoteControlKeyEventArgs >"
  },
  "api/Tizen.TV.UIControls.Forms.InputEvents.html": {
    "href": "api/Tizen.TV.UIControls.Forms.InputEvents.html",
    "title": "Class InputEvents",
    "keywords": "Class InputEvents The InputEvents class helps developers to handle the remote control events that are emitted from TV devices. Inheritance System.Object InputEvents Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class InputEvents : object Fields AccessKeyProperty Identifies the access key that is set to the object at run time. Declaration public static readonly BindableProperty AccessKeyProperty Field Value Type Description BindableProperty EventHandlersProperty Implements the attached property that is a collection of RemoteKeyHandler s. Declaration public static readonly BindableProperty EventHandlersProperty Field Value Type Description BindableProperty Methods GetAccessKey(BindableObject) Returns the access key that is set to the view. Declaration public static RemoteControlKeyNames GetAccessKey(BindableObject view) Parameters Type Name Description BindableObject view The view to get the access key. Returns Type Description RemoteControlKeyNames Returns the remote contol key name. GetEventHandlers(BindableObject) Returns a collection of the RemoteKeyHandler for the specified view. Developers can add or remove RemoteKeyHandler s using this collection. Declaration public static IList<RemoteKeyHandler> GetEventHandlers(BindableObject view) Parameters Type Name Description BindableObject view The view to get a collection of the RemoteKeyHandler s. Returns Type Description IList < RemoteKeyHandler > Returns a collection of the RemoteKeyHandler s SetAccessKey(BindableObject, RemoteControlKeyNames) Sets the access key to the specified view. When the access key is pressed, the specified view will directly get the focus and also be clicked if it is the Button. Declaration public static void SetAccessKey(BindableObject view, RemoteControlKeyNames value) Parameters Type Name Description BindableObject view The view to be set. RemoteControlKeyNames value The remote control key name to be set to the view."
  },
  "api/Tizen.TV.UIControls.Forms.MediaSourceConverter.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaSourceConverter.html",
    "title": "Class MediaSourceConverter",
    "keywords": "Class MediaSourceConverter Class that takes a string representation of a media file location and returns a MeidaSource from the specified resource. Inheritance System.Object MediaSourceConverter Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class MediaSourceConverter : TypeConverter Methods ConvertFromInvariantString(String) Returns a media source created from a URI that is contained in value. Declaration public override object ConvertFromInvariantString(string value) Parameters Type Name Description System.String value The value to convert. Returns Type Description System.Object MediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.ContentButton.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ContentButton.html",
    "title": "Class ContentButton",
    "keywords": "Class ContentButton The ContentButton is a Button, which allows you to customize the View to be displayed. Inheritance System.Object Tizen.Theme.Common.ContentButton ContentButton Implements IButtonController Inherited Members Tizen.Theme.Common.ContentButton.CommandProperty Tizen.Theme.Common.ContentButton.CommandParameterProperty Tizen.Theme.Common.ContentButton.IsPressedProperty Tizen.Theme.Common.ContentButton.IsPressed Tizen.Theme.Common.ContentButton.Command Tizen.Theme.Common.ContentButton.CommandParameter Tizen.Theme.Common.ContentButton.Clicked Tizen.Theme.Common.ContentButton.Pressed Tizen.Theme.Common.ContentButton.Released Tizen.Theme.Common.ContentButton.SendClicked() Tizen.Theme.Common.ContentButton.SendPressed() Tizen.Theme.Common.ContentButton.SendReleased() Tizen.Theme.Common.ContentButton.OnBindingContextChanged() Tizen.Theme.Common.ContentButton.ChangeVisualState() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ContentButton : ContentButton, IButtonController Implements IButtonController"
  },
  "api/Tizen.TV.UIControls.Forms.IRecycleItemsViewController.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IRecycleItemsViewController.html",
    "title": "Interface IRecycleItemsViewController",
    "keywords": "Interface IRecycleItemsViewController This interface is for internal use. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IRecycleItemsViewController Properties FocusedView Declaration View FocusedView { get; } Property Value Type Description View ScrollBounds Declaration Rectangle ScrollBounds { get; } Property Value Type Description Rectangle Methods SendKeyDown(String) Declaration bool SendKeyDown(string keyname) Parameters Type Name Description System.String keyname Returns Type Description System.Boolean"
  },
  "api/Tizen.TV.UIControls.Forms.DrawerPosition.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DrawerPosition.html",
    "title": "Enum DrawerPosition",
    "keywords": "Enum DrawerPosition Enumeration that specifies the DrawerPosition Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum DrawerPosition : int Fields Name Description Default Except when in RTL mode, default is left. Left Drawer on left side Right Drawer on right side"
  },
  "api/Tizen.TV.UIControls.Forms.MediaPlayer.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaPlayer.html",
    "title": "Class MediaPlayer",
    "keywords": "Class MediaPlayer MediaPlayer provieds the essential components to play the media contents. Inheritance System.Object Tizen.Theme.Common.MediaPlayer MediaPlayer Inherited Members Tizen.Theme.Common.MediaPlayer.SourceProperty Tizen.Theme.Common.MediaPlayer.VideoOutputProperty Tizen.Theme.Common.MediaPlayer.UsesEmbeddingControlsProperty Tizen.Theme.Common.MediaPlayer.VolumeProperty Tizen.Theme.Common.MediaPlayer.IsMutedProperty Tizen.Theme.Common.MediaPlayer.AspectModeProperty Tizen.Theme.Common.MediaPlayer.AutoPlayProperty Tizen.Theme.Common.MediaPlayer.AutoStopProperty Tizen.Theme.Common.MediaPlayer.DurationProperty Tizen.Theme.Common.MediaPlayer.BufferingProgressProperty Tizen.Theme.Common.MediaPlayer.PositionProperty Tizen.Theme.Common.MediaPlayer.StateProperty Tizen.Theme.Common.MediaPlayer.PositionUpdateIntervalProperty Tizen.Theme.Common.MediaPlayer.IsBufferingProperty Tizen.Theme.Common.MediaPlayer.IsLoopingProperty Tizen.Theme.Common.MediaPlayer.AspectMode Tizen.Theme.Common.MediaPlayer.AutoPlay Tizen.Theme.Common.MediaPlayer.AutoStop Tizen.Theme.Common.MediaPlayer.BufferingProgress Tizen.Theme.Common.MediaPlayer.Duration Tizen.Theme.Common.MediaPlayer.Source Tizen.Theme.Common.MediaPlayer.VideoOutput Tizen.Theme.Common.MediaPlayer.Volume Tizen.Theme.Common.MediaPlayer.IsMuted Tizen.Theme.Common.MediaPlayer.IsLooping Tizen.Theme.Common.MediaPlayer.PositionUpdateInterval Tizen.Theme.Common.MediaPlayer.UsesEmbeddingControls Tizen.Theme.Common.MediaPlayer.Position Tizen.Theme.Common.MediaPlayer.State Tizen.Theme.Common.MediaPlayer.IsBuffering Tizen.Theme.Common.MediaPlayer.Progress Tizen.Theme.Common.MediaPlayer.StartCommand Tizen.Theme.Common.MediaPlayer.FastForwardCommand Tizen.Theme.Common.MediaPlayer.RewindCommand Tizen.Theme.Common.MediaPlayer.PlaybackCompleted Tizen.Theme.Common.MediaPlayer.PlaybackStarted Tizen.Theme.Common.MediaPlayer.PlaybackPaused Tizen.Theme.Common.MediaPlayer.PlaybackStopped Tizen.Theme.Common.MediaPlayer.BufferingStarted Tizen.Theme.Common.MediaPlayer.BufferingCompleted Tizen.Theme.Common.MediaPlayer.Pause() Tizen.Theme.Common.MediaPlayer.Seek(System.Int32) Tizen.Theme.Common.MediaPlayer.Start() Tizen.Theme.Common.MediaPlayer.Stop() Tizen.Theme.Common.MediaPlayer.GetAlbumArts() Tizen.Theme.Common.MediaPlayer.GetMetadata() Tizen.Theme.Common.MediaPlayer.CreateMediaPlayerImpl() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class MediaPlayer : MediaPlayer"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteControlKeyEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteControlKeyEventArgs.html",
    "title": "Class RemoteControlKeyEventArgs",
    "keywords": "Class RemoteControlKeyEventArgs Arguments for the event that is raised when a remote control key is pressed or released. Inheritance System.Object RemoteControlKeyEventArgs Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class RemoteControlKeyEventArgs : EventArgs Constructors RemoteControlKeyEventArgs(VisualElement, RemoteControlKeyTypes, RemoteControlKeyNames, String) Constructs a new RemoteControlKeyEventArgs object for a key type, key name, and platform key name. Declaration public RemoteControlKeyEventArgs(VisualElement sender, RemoteControlKeyTypes keyType, RemoteControlKeyNames keyName, string platformKeyName) Parameters Type Name Description VisualElement sender The VisualElement that sends the event. RemoteControlKeyTypes keyType The type of a remote control key. RemoteControlKeyNames keyName The name of a remote control key. System.String platformKeyName The name of a platform key name. Properties Handled Gets or sets a value that indicates whether the remote control key event has already been handled. Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean KeyName The name of a remote control key. Declaration public RemoteControlKeyNames KeyName { get; } Property Value Type Description RemoteControlKeyNames KeyType The type of a remote control key. Declaration public RemoteControlKeyTypes KeyType { get; } Property Value Type Description RemoteControlKeyTypes PlatformKeyName The name of a platform key name. Declaration public string PlatformKeyName { get; } Property Value Type Description System.String Sender The sender of a remote control key. Declaration public VisualElement Sender { get; } Property Value Type Description VisualElement"
  },
  "api/Tizen.TV.UIControls.Forms.DisplayAspectMode.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DisplayAspectMode.html",
    "title": "Enum DisplayAspectMode",
    "keywords": "Enum DisplayAspectMode Enumerates values that define how a media content is displayed. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum DisplayAspectMode : int Fields Name Description AspectFill Scale the media content to fill the view. AspectFit Scale the media content to fit the view. Fill Scale the media content to so it exactly fills the view. OrignalSize The original size of the media content."
  },
  "api/Tizen.TV.UIControls.Forms.DRMPropertyValue.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DRMPropertyValue.html",
    "title": "Class DRMPropertyValue",
    "keywords": "Class DRMPropertyValue Inheritance System.Object DRMPropertyValue Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class DRMPropertyValue : object Constructors DRMPropertyValue(Boolean) Declaration public DRMPropertyValue(bool value) Parameters Type Name Description System.Boolean value DRMPropertyValue(String) Declaration public DRMPropertyValue(string value) Parameters Type Name Description System.String value Properties Value Declaration public Object Value { get; } Property Value Type Description Object Operators Implicit(Boolean to DRMPropertyValue) Declaration public static implicit operator DRMPropertyValue(bool value) Parameters Type Name Description System.Boolean value Returns Type Description DRMPropertyValue Implicit(String to DRMPropertyValue) Declaration public static implicit operator DRMPropertyValue(string value) Parameters Type Name Description System.String value Returns Type Description DRMPropertyValue"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteControlKeyNames.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteControlKeyNames.html",
    "title": "Enum RemoteControlKeyNames",
    "keywords": "Enum RemoteControlKeyNames Enumeration that specifies the remote control key names. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum RemoteControlKeyNames : int Fields Name Description Back Back. Blue Blue. ChannelGuide Channel guide. Down Down. Exit Exit. Green Green. Info Information. Left Left. LowerChannel Lower channel. LowerVolume Lower volume. Minus Minus. Mute Mute. Next Next. NextChapter Next Chapter. NUM0 0 NUM1 1 NUM2 2 NUM3 3 NUM4 4 NUM5 5 NUM6 6 NUM7 7 NUM8 8 NUM9 9 Pause Pause. Play Play. PlayBack Playback. PreviousChannel Previous channel. PreviousChapter Previous chapter. RaiseChannel Raise channel. RaiseVolume Raise volume. Record Record. Red Red. Return Return. Rewind Rewind. Right Right. SimpleMenu Simple menu. Stop Stop. Unknown An undefined key name. Up Up. Yellow Yellow."
  },
  "api/Tizen.TV.UIControls.Forms.AnimatedNavigationPage.html": {
    "href": "api/Tizen.TV.UIControls.Forms.AnimatedNavigationPage.html",
    "title": "Class AnimatedNavigationPage",
    "keywords": "Class AnimatedNavigationPage A Page that manages the navigation with custom animation and user-experience of a stack of other pages. Inheritance System.Object Tizen.Theme.Common.AnimatedNavigationPage AnimatedNavigationPage Inherited Members Tizen.Theme.Common.AnimatedNavigationPage.IsPreviousPageVisibleProperty Tizen.Theme.Common.AnimatedNavigationPage.IsPreviousPageVisible Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class AnimatedNavigationPage : AnimatedNavigationPage"
  },
  "api/Tizen.TV.UIControls.Forms.ItemUnrealizedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ItemUnrealizedEventArgs.html",
    "title": "Class ItemUnrealizedEventArgs",
    "keywords": "Class ItemUnrealizedEventArgs Event arguments for the ItemUnrealized event. Inheritance System.Object ItemUnrealizedEventArgs Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ItemUnrealizedEventArgs : EventArgs Properties Item The detached item. Declaration public object Item { get; set; } Property Value Type Description System.Object UnrealizedView The detached view. Declaration public View UnrealizedView { get; set; } Property Value Type Description View"
  },
  "api/Tizen.TV.UIControls.Forms.DrawerLayout.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DrawerLayout.html",
    "title": "Class DrawerLayout",
    "keywords": "Class DrawerLayout DrawerLayout is a kind of Layout that acts like a MasterDetailPage . Inheritance System.Object DrawerLayout Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class DrawerLayout : Layout<View> Constructors DrawerLayout() Creates and initializes a new instance of the DrawerLayout class. Declaration public DrawerLayout() Fields ClosedWidthProperty Identifies the ClosedWidth bindable property. Declaration public static readonly BindableProperty ClosedWidthProperty Field Value Type Description BindableProperty ContentProperty Identifies the Content bindable property. Declaration public static readonly BindableProperty ContentProperty Field Value Type Description BindableProperty DrawerModeProperty Identifies the DrawerMode bindable property. Declaration public static readonly BindableProperty DrawerModeProperty Field Value Type Description BindableProperty DrawerPositionProperty Identifies the DrawerPosition bindable property. Declaration public static readonly BindableProperty DrawerPositionProperty Field Value Type Description BindableProperty DrawerProperty Identifies the Drawer bindable property. Declaration public static readonly BindableProperty DrawerProperty Field Value Type Description BindableProperty DrawerWidthProperty Identifies the DrawerWidth bindable property. Declaration public static readonly BindableProperty DrawerWidthProperty Field Value Type Description BindableProperty IsOpenProperty Identifies the IsOpen bindable property. Declaration public static readonly BindableProperty IsOpenProperty Field Value Type Description BindableProperty OpenRatioProperty Identifies the Content bindable property. Declaration public static readonly BindableProperty OpenRatioProperty Field Value Type Description BindableProperty Properties Content Gets or sets a view to place content area Declaration public View Content { get; set; } Property Value Type Description View Drawer Gets or sets a view to place drawer area Declaration public View Drawer { get; set; } Property Value Type Description View DrawerClosedWidth Gets or sets a value that represents the width of closed drawer. Declaration public double DrawerClosedWidth { get; set; } Property Value Type Description System.Double DrawerMode Gets or sets a value that represents the drawer mode Declaration public DrawerMode DrawerMode { get; set; } Property Value Type Description DrawerMode DrawerPosition Gets or sets a value that represents position of drawer Declaration public DrawerPosition DrawerPosition { get; set; } Property Value Type Description DrawerPosition DrawerWidth Gets or sets a value that represents the width of drawer. Declaration public double DrawerWidth { get; set; } Property Value Type Description System.Double IsOpen Gets or sets a value that represents state of drawer open Declaration public bool IsOpen { get; set; } Property Value Type Description System.Boolean OpenRatio Gets a value that represents persent of drawer open ratio 0(closed) ~ opened(1.0) Declaration public double OpenRatio { get; } Property Value Type Description System.Double Methods LayoutChildren(Double, Double, Double, Double) Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description System.Double x System.Double y System.Double width System.Double height OnMeasure(Double, Double) Declaration protected override SizeRequest OnMeasure(double widthConstraint, double heightConstraint) Parameters Type Name Description System.Double widthConstraint System.Double heightConstraint Returns Type Description SizeRequest Events DrawerClosed Event that is raised when drawer was closed. Declaration public event EventHandler DrawerClosed Event Type Type Description EventHandler DrawerOpened Event that is raised when drawer was opened. Declaration public event EventHandler DrawerOpened Event Type Type Description EventHandler"
  },
  "api/Tizen.TV.UIControls.Forms.AnimatedContentPage.html": {
    "href": "api/Tizen.TV.UIControls.Forms.AnimatedContentPage.html",
    "title": "Class AnimatedContentPage",
    "keywords": "Class AnimatedContentPage A ContentPage that support animation when switching pages. Inheritance System.Object Tizen.Theme.Common.AnimatedContentPage AnimatedContentPage Inherited Members Tizen.Theme.Common.AnimatedContentPage.PageTransitionProperty Tizen.Theme.Common.AnimatedContentPage.PageTranistion Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class AnimatedContentPage : AnimatedContentPage"
  },
  "api/Tizen.TV.UIControls.Forms.IVideoOutput.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IVideoOutput.html",
    "title": "Interface IVideoOutput",
    "keywords": "Interface IVideoOutput Interface indicating the ouput type of the media. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IVideoOutput Properties Controller Declaration View Controller { get; set; } Property Value Type Description View MediaView Declaration VisualElement MediaView { get; } Property Value Type Description VisualElement OuputType Declaration VideoOuputType OuputType { get; } Property Value Type Description VideoOuputType"
  },
  "api/Tizen.TV.UIControls.Forms.UriMediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.UriMediaSource.html",
    "title": "Class UriMediaSource",
    "keywords": "Class UriMediaSource A MediaSource that loads a media from a URI Inheritance System.Object MediaSource UriMediaSource Inherited Members MediaSource.FromFile(String) MediaSource.FromUri(Uri) MediaSource.OnSourceChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class UriMediaSource : MediaSource Fields UriProperty Identifies the File bindable property. Declaration public static readonly BindableProperty UriProperty Field Value Type Description BindableProperty Properties Uri Gets or sets the URI for the media to get. Declaration public Uri Uri { get; set; } Property Value Type Description Uri Methods OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName ToString() Returns the path to the file for the media, prefixed with the string, \"Uri: \". Declaration public override string ToString() Returns Type Description System.String Operators Implicit(UriMediaSource to String) Allows implicit casting to a string. Declaration public static implicit operator string (UriMediaSource uri) Parameters Type Name Description UriMediaSource uri Returns Type Description System.String Implicit(Uri to UriMediaSource) Allows implicit casting from a Uri. Declaration public static implicit operator UriMediaSource(Uri uri) Parameters Type Name Description Uri uri Returns Type Description UriMediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.EmbeddingControls.html": {
    "href": "api/Tizen.TV.UIControls.Forms.EmbeddingControls.html",
    "title": "Class EmbeddingControls",
    "keywords": "Class EmbeddingControls Inheritance System.Object Tizen.Theme.Common.EmbeddingControls EmbeddingControls Implements ContentView Inherited Members Tizen.Theme.Common.EmbeddingControls.OnBindingContextChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class EmbeddingControls : EmbeddingControls, ContentView Implements ContentView"
  },
  "api/Tizen.TV.UIControls.Forms.PlaybackState.html": {
    "href": "api/Tizen.TV.UIControls.Forms.PlaybackState.html",
    "title": "Enum PlaybackState",
    "keywords": "Enum PlaybackState Enumerates values that define the playback state of the media content. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum PlaybackState : int Fields Name Description Paused Paused while playing media. Playing Playing. Stopped Stopped."
  }
}