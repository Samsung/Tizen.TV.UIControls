{
  "guides/ContentPopup.html": {
    "href": "guides/ContentPopup.html",
    "title": "ContentPopup",
    "keywords": "ContentPopup Introduction ContentPopup is a type of Xamarin.Forms.Element (not a Xamarin.Forms.VisualElement) that contains a single child element (called Content) and allows to open it as a popup. Create a ContentPopup You can easily create a ContentPopup like any other Xamarin.Forms views. // Creates a ContentPopup var popup = new ContentPopup { BackgroundColor = Color.FromHex(\"#CCF0F8FF\"), Content = new StackLayout { Children = { new Label { Text = \"This ContentPopup is dismissed as a back key.\", } } } }; Show a ContentPopup Similar to Xamarin.Forms DisplayActionSheet() and DisplayAlert() , to open a ContentPopup , you can call ShowPopup() as shown below. await Navigation.ShowPopup(popup); An awaitable Task will be returned when popup is closed. Content You can customize the content of the popup as you want by setting the Content property. All Xamarin.Forms layouts can be set as Content (not a Xamarin.Forms.View). BackgroundColor The background color refers to the color dimmed by ContentPopup . The default background color of ContentPopup is Tranparent . So if you want to change this, just set BackgroundColor to the color you want. Back Button Basically, you can use the back button of remote controller to close the ContentPopup . If you want the back button to behave differently, override OnBackButtonPressed as shown below. This example shows that when the back button is pressed, the ContentPopup doesn't do the default behavior to close. In this case, the user must explicitly use Dismiss() to close the ContentPopup . public class MyPopup : CPopup { protected override bool OnBackButtonPressed() { return true; } } Related Links API reference Sample"
  },
  "guides/MediaPlayer_Converter.html": {
    "href": "guides/MediaPlayer_Converter.html",
    "title": "Problem definition",
    "keywords": "Problem definition MediaPlayer.Position is int value, but Progressbar.Progress is double value (0 to 1.0) Need duration to convert Create a custom Converter Implements Xamarin.Forms.IValueConverter public class PositionToProgressConverter : IValueConverter { public object Convert(object value, Type targetType, object parameter, CultureInfo culture) { return ((int)value / (double)(GetParameter(parameter))); } public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) { return (int)((double)value * GetParameter(parameter)); } int GetParameter(object parameter) { var duration = ((Tizen.TV.UIControls.Forms.MediaPlayer)parameter).Duration; if (duration == 0) duration = 1; return duration; } } Pass a MediaPlayer instance as the parameter Use custom converter in Xaml .... <ContentPage.Resources> <ResourceDictionary> <local:PositionToProgressConverter x:Key=\"positionToProgress\"/> </ResourceDictionary> </ContentPage.Resources> ... <ProgressBar Progress=\"{Binding Source={x:Reference Player}, Path=Position, Converter={StaticResource positionToProgress}, ConverterParameter={x:Reference Player}}}\"/> ...."
  },
  "guides/DrawerLayout.html": {
    "href": "guides/DrawerLayout.html",
    "title": "DrawerLayout",
    "keywords": "DrawerLayout Introduction DrawerLayout is a kind of Layout that acts like a MasterDetailPage . it has a drawer part that interactively pull and push. Drawer part can control with IsOpen property. The open and close action are including animation. Drawer and Content DrawerLayout is consist of Drawer and Content view. Drawer is a moving part, Content is fixed part. Drawer is like a MasterPage and Content is like a DetailPage in MasterDetailPage . DrawerMode The developer can control the layout of the content when the drawer was opened by using DrawerMode DrawerMode.Resize (default) It is default behavior, Content view is resized to open drawer view DrawerMode.Panning Content view is moved to side DrawerMode.Overlap Drawer view is overlapped above content view DrawerPosition Developers can set position of the drawer. it default on the left side. but if RTL(Right to left) mode enabled, it default on the right side. DrawerClosedWidth Developers can set the width of the closed drawer."
  },
  "guides/Overview.html": {
    "href": "guides/Overview.html",
    "title": "Tizen TV UIControls",
    "keywords": "Tizen TV UIControls The Tizen TV UIControls is a set of helpful extensions to the Xamarin Forms framework for the Samsung TV device. The binaries are available via NuGet (package name is Tizen.TV.UIControls) with the source available here. Screen shot Build Status Packages Getting Started Install package nuget.exe nuget.exe install Tizen.TV.UIControls -Version 1.0.0 .csproj <PackageReference Include=\"Tizen.TV.UIControls\" Version=\"1.0.0\" /> Use in Xaml Declaring Namespaces for TV.UIControls <ContentPage ... xmlns:tv=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" ...> Initialization on Platform code Tizen.TV.UIControls.Forms.UIControls.Init(); global::Xamarin.Forms.Platform.Tizen.Forms.Init(app); //set main window provider Tizen.TV.UIControls.Forms.UIControls.MainWindowProvider = () => app.MainWindow;"
  },
  "guides/ContentButton.html": {
    "href": "guides/ContentButton.html",
    "title": "ContentButton",
    "keywords": "ContentButton ContentButton is a type of Xamarin.Forms.ContentView that contains a single child element (called Content) and is typically used for custom, reusable controls. Also, as its name implies, ContentButton is designed to be used like a Button that implements Xamarin.Forms.IButtonController . How to customize the button using ContentButton ? ContentButton provides the view to show and the states(Clicked, Pressed and Released) of the button. You can customize the button through changing the view according to the state. The following example shows the CustomButton composed of a combination of Images that define the icon, background, and border of a button. To show a border, this example has set an outlined image with blending color as a Content, and the background color of the button will change to gray when the button is pressed for click-effect. For more information, see the following links: ContentButton API reference Create ContentButton C# file public class ContentButtonTest : ContentPage { public ContentButtonTest() { ContentButton button = new ContentButton { Content = new Label { Text = \"Text Button\" } }; Content = new StackLayout { Children = { button, } }; } } XAML file <?xml version=\"1.0\" encoding=\"utf-8\" ?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:tv=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" Title=\"ContentButton Test\" x:Class=\"Sample.ContentButton.ContentButtonTest\"> <ContentPage.Content> <StackLayout HorizontalOptions=\"Center\"> <tv:ContentButton Clicked=\"ContentButton_Clicked\"> <VisualStateManager.VisualStateGroups> <VisualStateGroup x:Name=\"CommonStates\"> <VisualState x:Name=\"Normal\"> <VisualState.Setters> <Setter Property=\"BackgroundColor\" Value=\"Transparent\"/> </VisualState.Setters> </VisualState> <VisualState x:Name=\"Focused\"> <VisualState.Setters> <Setter Property=\"BackgroundColor\" Value=\"Orange\"/> </VisualState.Setters> </VisualState> </VisualStateGroup> </VisualStateManager.VisualStateGroups> <Label FontSize=\"Header\" x:Name=\"_label\" Text=\"Text Button\" /> </tv:ContentButton> </StackLayout> </ContentPage.Content> </ContentPage>"
  },
  "guides/RecycleItemsView_CustomEffect.html": {
    "href": "guides/RecycleItemsView_CustomEffect.html",
    "title": "Focus with header footer",
    "keywords": "RecycleItemsView provides a default focusing effect that is scaling to 1.2. If you want to change this behavior, you need to inherit RecycleItemsView and override OnItemFocused method. protected virtual void OnItemFocused(object data, View targetView, bool isFocused); When you need to apply the focusing effect, we call this method with the focused view. data is a FocusedItem in ItemsSource targetView is a realized view that is created by ItemTemplate isFocused is about whether focus or not. You need to implement Focused and Unfocused cases. If not, all views will be shown as focused. Focus with header footer Header/Footer also can get a focus and triggered OnItemFocused when focused. Therefore, if you want to know if a focused view is the header or not, compare the data parameter with Header property. Custom Fouse Effect example <local:MyRecycleItemsView ...> <tvcontrols:RecycleItemsView.ItemTemplate> <DataTemplate> <AbsoluteLayout> <Image Source=\"{Binding Source}\" Aspect=\"Fill\" AbsoluteLayout.LayoutBounds=\"0, 0, 1, 1\" AbsoluteLayout.LayoutFlags=\"All\"/> <StackLayout Padding=\"20\" BackgroundColor=\"#aa000000\" AbsoluteLayout.LayoutBounds=\"0, 1, 480, 100\" AbsoluteLayout.LayoutFlags=\"PositionProportional\"> <Label Text=\"{Binding Text}\" TextColor=\"AntiqueWhite\" FontSize=\"70\" FontAttributes=\"Bold\" /> <Label Text=\"{Binding DetailText}\" FontSize=\"40\"/> </StackLayout> </AbsoluteLayout> </DataTemplate> </tvcontrols:RecycleItemsView.ItemTemplate> </local:MyRecycleItemsView> protected override void OnItemFocused(object data, View targetView, bool isFocused) { AbsoluteLayout layout = (AbsoluteLayout)targetView; View textarea = layout.Children[1]; if (isFocused) { targetView.ScaleTo(1.2); var animation = new Animation((rate) => { AbsoluteLayout.SetLayoutBounds(textarea, new Rectangle(0, 1, 480, 100 + rate * 100)); }); animation.Commit(this, $\"Focused - {data.GetHashCode()}\"); } else { targetView.ScaleTo(1.0); var animation = new Animation((rate) => { AbsoluteLayout.SetLayoutBounds(textarea, new Rectangle(0, 1, 480, 200 - rate * 100)); }); animation.Commit(this, $\"Focused - {data.GetHashCode()}\"); } } When the Item is focused, text area will grow up to 200px. We are able to know a type of View, because it was created by ItemTemplate . So, we can get a StackLayout object and make it larger."
  },
  "index.html": {
    "href": "index.html",
    "title": "Tizen TV UIControls",
    "keywords": "Tizen TV UIControls The Tizen TV UIControls is a set of helpful extensions to the Xamarin Forms framework for the Samsung TV device. The binaries are available via NuGet (package name is \"Tizen.TV.UIControls\") with the source available here. Major Classes Name Description MediaPlayer Class that provieds the essential components to play the media contents. MediaView Class that is used to display the video output on the screen. OverlayMediaView An overlay MediaView. OverlayPage Class that is used to display the video output on a page. RecycleItemsView ScrollView that efficiently displays a collection of data using DataTemplate. InputEvents Class that helps developers to handle the remote control events that are emitted from TV devices. RemoteKeyHandler Class that contains a command and key events that react to remote controller events. DrawerLayout A kind of Layout that acts like a MasterDetailPage ."
  },
  "api/Tizen.TV.UIControls.Forms.AnimatablePage.html": {
    "href": "api/Tizen.TV.UIControls.Forms.AnimatablePage.html",
    "title": "Class AnimatablePage",
    "keywords": "Class AnimatablePage Manages animated page transitions on push and pop. Inheritance System.Object AnimatablePage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public static class AnimatablePage Fields PopAnimationLengthProperty Identifies the PopAnimationLength bindable property. Declaration public static readonly BindableProperty PopAnimationLengthProperty Field Value Type Description BindableProperty PopAnimationProperty Identifies the PopAnimation bindable property. Declaration public static readonly BindableProperty PopAnimationProperty Field Value Type Description BindableProperty PopAnimationRateProperty Identifies the PopAnimationRate bindable property. Declaration public static readonly BindableProperty PopAnimationRateProperty Field Value Type Description BindableProperty PushAnimationLengthProperty Identifies the PushAnimationLength bindable property. Declaration public static readonly BindableProperty PushAnimationLengthProperty Field Value Type Description BindableProperty PushAnimationProperty Identifies the PushAnimation bindable property. Declaration public static readonly BindableProperty PushAnimationProperty Field Value Type Description BindableProperty PushAnimationRateProperty Identifies the PushAnimationRate bindable property. Declaration public static readonly BindableProperty PushAnimationRateProperty Field Value Type Description BindableProperty Methods GetPopAnimation(Page) Get the pop animation. Declaration public static Animation GetPopAnimation(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description Animation GetPopAnimationLength(Page) Get the pop animation length. Declaration public static uint GetPopAnimationLength(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description System.UInt32 GetPopAnimationRate(Page) Get the pop animation rate. Declaration public static uint GetPopAnimationRate(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description System.UInt32 GetPushAnimation(Page) Get the push animation. Declaration public static Animation GetPushAnimation(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description Animation GetPushAnimationLength(Page) Get the push animation length. Declaration public static uint GetPushAnimationLength(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description System.UInt32 GetPushAnimationRate(Page) Get the push animation rate. Declaration public static uint GetPushAnimationRate(this Page page) Parameters Type Name Description Page page The page to be animated Returns Type Description System.UInt32 SetPopAnimation(Page, Animation) Set the push animation. Declaration public static void SetPopAnimation(this Page page, Animation value) Parameters Type Name Description Page page The page to be animated Animation value The pop animation SetPopAnimationLength(Page, UInt32) Set the pop animation length. Declaration public static void SetPopAnimationLength(this Page page, uint value) Parameters Type Name Description Page page The page to be animated System.UInt32 value The pop animation length SetPopAnimationRate(Page, UInt32) Set the pop animation rate. Declaration public static void SetPopAnimationRate(this Page page, uint value) Parameters Type Name Description Page page The page to be animated System.UInt32 value The pop animation rate SetPushAnimation(Page, Animation) Set the push animation. Declaration public static void SetPushAnimation(this Page page, Animation value) Parameters Type Name Description Page page The page to be animated Animation value The push animation SetPushAnimationLength(Page, UInt32) Set the push animation length. Declaration public static void SetPushAnimationLength(this Page page, uint value) Parameters Type Name Description Page page The page to be animated System.UInt32 value The push animation length SetPushAnimationRate(Page, UInt32) Set the push animation rate. Declaration public static void SetPushAnimationRate(this Page page, uint value) Parameters Type Name Description Page page The page to be animated System.UInt32 value The push animation rate"
  },
  "api/Tizen.TV.UIControls.Forms.DRMPropertyValue.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DRMPropertyValue.html",
    "title": "Class DRMPropertyValue",
    "keywords": "Class DRMPropertyValue Inheritance System.Object DRMPropertyValue Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class DRMPropertyValue Constructors DRMPropertyValue(Boolean) Declaration public DRMPropertyValue(bool value) Parameters Type Name Description System.Boolean value DRMPropertyValue(String) Declaration public DRMPropertyValue(string value) Parameters Type Name Description System.String value Properties Value Declaration public object Value { get; } Property Value Type Description System.Object Operators Implicit(Boolean to DRMPropertyValue) Declaration public static implicit operator DRMPropertyValue(bool value) Parameters Type Name Description System.Boolean value Returns Type Description DRMPropertyValue Implicit(String to DRMPropertyValue) Declaration public static implicit operator DRMPropertyValue(string value) Parameters Type Name Description System.String value Returns Type Description DRMPropertyValue"
  },
  "api/Tizen.TV.UIControls.Forms.IVideoOutput.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IVideoOutput.html",
    "title": "Interface IVideoOutput",
    "keywords": "Interface IVideoOutput Interface indicating the ouput type of the media. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IVideoOutput Properties Controller Declaration View Controller { get; set; } Property Value Type Description View MediaView Declaration VisualElement MediaView { get; } Property Value Type Description VisualElement OuputType Declaration VideoOuputType OuputType { get; } Property Value Type Description VideoOuputType"
  },
  "guides/AnimatedNavigationPage.html": {
    "href": "guides/AnimatedNavigationPage.html",
    "title": "AnimatedNavigationPage",
    "keywords": "AnimatedNavigationPage Introduction AnimatedNavigationPage is a subclass of Xamarin.Forms.NavigationPage that support page tranisition animation when the page is popped or pushed. Each page can define a push transition animation and pop transition animation respectively using the attached properties below. SetPushAnimation() SetPushAnimationRate() SetPushAnimationLength() SetPopAnimation() SetPopAnimationRate() SetPopAnimationLength() When the page is pushed or popped through AnimatedNavigationPage , the defined animation will run. Creating the Root Page The first page added to a navigation stack is referred to as the root page of the application, and the following code example shows how this is accomplished: public App () { MainPage = new AnimatedNavigationPage (new MyPage()); } This causes the MyPage ContentPage instance to be pushed onto the navigation stack, where it becomes the active page and the root page of the application. Describing the Page Transition Animations Through various attached properties provided by AnimatablePage , all pages can define push/pop animation as shown below. public MyPage () { var pushAnim = new Animation (v => Opacity = v, 0, 1); var popAnim = new Animation (v => Opacity = v, 1, 0); this.SetPushAnimation(pushAnim); this.SetPopAnimation(popAnim); } You can define your own page transition animations like this. Using the AnimatedContentPage For convenience, we provide predefined page transition animations through AnimatedContentPage . AnimatedContentPage is a subclass of Xamarin.Forms.ContentPage that provide pre-defined page tranisition animation. The PageTransition property allows you to set pre-defined page transition animations for each pages. The predefined page transition animations are as follows. SlideFromLeft : Slide from left to right on push, and slide from right to left on pop SlideFromRight : Slide from right to left on push, and slide from left to right on pop SlideFromTop : Slide from top to bottom on push, and slide from bottom to top on pop SlideFromBottom : Slide from bottom to top on push, and slide from top to bottom on pop Fade : Show a fade animation Scale : Show a scale animation var page = new AnimatedContentPage { PageTranistion = PageTranistion.SlideFromRight }; //Push a page await Navigation.PushAsync(page); //Pop a page await Navigation.PopAsync(); Limitations The basic page navigating method is the same as Xamarin.Forms.NavigationPage , but the following methods and properties are not supported. BackButtonTitle HasNavigationBar HasBackButton Tint BarBackgroundColor BarBackground BarTextColor TitleIcon IconColor TitleView Related Links API reference Sample"
  },
  "api/Tizen.TV.UIControls.Forms.AnimatedNavigationPage.html": {
    "href": "api/Tizen.TV.UIControls.Forms.AnimatedNavigationPage.html",
    "title": "Class AnimatedNavigationPage",
    "keywords": "Class AnimatedNavigationPage A Page that manages the navigation with custom animation and user-experience of a stack of other pages. Inheritance System.Object AnimatedNavigationPage Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class AnimatedNavigationPage : NavigationPage Constructors AnimatedNavigationPage() Creates and initializes a new instance of the AnimatedNavigationPage class. Declaration public AnimatedNavigationPage() AnimatedNavigationPage(Page) Creates and initializes a new instance of the AnimatedNavigationPage class. Declaration public AnimatedNavigationPage(Page root) Parameters Type Name Description Page root The root page"
  },
  "api/Tizen.TV.UIControls.Forms.FileMediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.FileMediaSource.html",
    "title": "Class FileMediaSource",
    "keywords": "Class FileMediaSource A MediaSource that reads a media from a file. Inheritance System.Object MediaSource FileMediaSource Inherited Members MediaSource.FromFile(String) MediaSource.FromUri(Uri) MediaSource.OnSourceChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class FileMediaSource : MediaSource Fields FileProperty Identifies the File bindable property. Declaration public static readonly BindableProperty FileProperty Field Value Type Description BindableProperty Properties File Gets or sets the file from which this FileMediaSource will load a media. Declaration public string File { get; set; } Property Value Type Description System.String Methods OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName ToString() Returns a string representation of File . Declaration public override string ToString() Returns Type Description System.String Operators Implicit(String to FileMediaSource) Allows implicit casting from a string. Declaration public static implicit operator FileMediaSource(string file) Parameters Type Name Description System.String file Returns Type Description FileMediaSource Implicit(FileMediaSource to String) Allows implicit casting to a string. Declaration public static implicit operator string (FileMediaSource file) Parameters Type Name Description FileMediaSource file Returns Type Description System.String"
  },
  "api/Tizen.TV.UIControls.Forms.MediaSourceConverter.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaSourceConverter.html",
    "title": "Class MediaSourceConverter",
    "keywords": "Class MediaSourceConverter Class that takes a string representation of a media file location and returns a MeidaSource from the specified resource. Inheritance System.Object MediaSourceConverter Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class MediaSourceConverter : TypeConverter Methods ConvertFromInvariantString(String) Returns a media source created from a URI that is contained in value. Declaration public override object ConvertFromInvariantString(string value) Parameters Type Name Description System.String value The value to convert. Returns Type Description System.Object MediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.html": {
    "href": "api/Tizen.TV.UIControls.Forms.html",
    "title": "Namespace Tizen.TV.UIControls.Forms",
    "keywords": "Namespace Tizen.TV.UIControls.Forms Classes AnimatablePage Manages animated page transitions on push and pop. AnimatedContentPage A ContentPage that support animation when switching pages. AnimatedNavigationPage A Page that manages the navigation with custom animation and user-experience of a stack of other pages. BufferingProgressUpdatedEventArgs Internal use only. Contains arguments for the event that is raised when the buffering progress is updated. ContentButton The ContentButton is a Button, which allows you to customize the View to be displayed. ContentPopup The ContentPopup is a Popup, which allows you to customize the Layout to be displayed. ContentPopupManager DrawerLayout DrawerLayout is a kind of Layout that acts like a MasterDetailPage . DRMMediaSource DRMPropertyValue EmbeddingControls A built-in media controls. FileMediaSource A MediaSource that reads a media from a file. FileMediaSourceConverter A TypeConverter that converts to FileMediaSource. Focus FocusedItemChangedEventArgs Event arguments for the ItemFocused event. FocusFrame It is a container to decorate focused state InputEvents The InputEvents class helps developers to handle the remote control events that are emitted from TV devices. ItemRealizedEventArgs Event arguments for the ItemRealized event. ItemUnrealizedEventArgs Event arguments for the ItemUnrealized event. MediaPlayer MediaPlayer provieds the essential components to play the media contents. MediaSource Abstract class whose implementors load media contents from files or the Web. MediaSourceConverter Class that takes a string representation of a media file location and returns a MeidaSource from the specified resource. MediaView The MediaView class is an abstract class whose subclasses can be used to display the video output on the screen. OverlayMediaView An overlay MediaView. OverlayPage The OverlayPage class is used to display the video output on a page. RecycleItemsView A ScrollView that efficiently displays a collections of data using DataTemplate RemoteControlKeyEventArgs Arguments for the event that is raised when a remote control key is pressed or released. RemoteKeyHandler The RemoteKeyHandler contains a command and key events that react to remote controller events. UriMediaSource A MediaSource that loads a media from a URI Interfaces IContentPopupRenderer Base interface for ContentPopup renderer. IOverlayOutput Interface for defining the overlay type of output. IPlatformMediaPlayer For internal use by platform renderers. IRecycleItemsViewController This interface is for internal use. IVideoOutput Interface indicating the ouput type of the media. Enums DisplayAspectMode Enumerates values that define how a media content is displayed. DrawerMode Enumeration that specifies the DrawerMode DrawerPosition Enumeration that specifies the DrawerPosition PageTransition Enumerates values that define the page transition animation type. PlaybackState Enumerates values that define the playback state of the media content. RecycleItemsViewOrientation The orientations the a RecycleItemsView can have. RemoteControlKeyNames Enumeration that specifies the remote control key names. RemoteControlKeyTypes Enumeration that specifies the remote control key types. VideoOuputType Enumeration that specifies the video ouput."
  },
  "guides/RecycleItemsView_Introduction.html": {
    "href": "guides/RecycleItemsView_Introduction.html",
    "title": "RecycleItemsView",
    "keywords": "RecycleItemsView Introduction RecycleItemsView is a view that takes in a list of user objects and produces views for each of them to be displayed. Especially, it can be used when the data is displayed in the same view template. It reuses the templated view when it is out of sight. Concept How to use C# var recycleView = new RecycleItemsView() { ContentMargin = 60, ItemHeight = 350, ItemWidth = 300, Spacing = 20, ItemsSource = item, ItemTemplate = new DataTemplate(() => { Label label; var view = new StackLayout { Children = { (label = new Label { }) } }; view.SetBinding(StackLayout.BackgroundColorProperty, new Binding(\"Color\")); label.SetBinding(Label.TextProperty, new Binding(\"Label\")); return view; }) }), XAML <tvcontrols:RecycleItemsView ContentMargin=\"60\" ItemWidth=\"300\" ItemHeight=\"350\" Spacing=\"20\" ItemsSource=\"{Binding Items}\"> <tvcontrols:RecycleItemsView.ItemTemplate> <DataTemplate> <StackLayout BackgroundColor=\"{Binding Color}\"> <Label Text=\"{Binding Text}\"/> </StackLayout> </DataTemplate> </tvcontrols:RecycleItemsView.ItemTemplate> </tvcontrols:RecycleItemsView> Properties related layouting Item width and height All items in RecycleItemsView have the same width and height, because it should be reused. Multiple columns You can display items on multiple lines. Use ColumnCount property to apply multiple columns. Header and Footer RecycleItemsView displays items with a same DataTemplate . If you want to use special looks for first or last, you can use Header or Footer property. The Header and Footer can be data objects that contain a view model or a view instance. If Header or Footer is a View, it is directly used for displaying header or footer. If not, HeaderTemplate or FooterTemplate is used to make a view that is used for displaying header or footer. Related Links DataTemplate Sample"
  },
  "guides/MediaPlayer_Introduction.html": {
    "href": "guides/MediaPlayer_Introduction.html",
    "title": "MediaPlayer",
    "keywords": "MediaPlayer Introduction MediaPlayer provides functionality of playing multimedia. It also includes related view components that display video stream. How to use C# var page = new OverlayPage(); var player = new MediaPlayer(); player.VideoOutput = page; player.Source = \"a.mp4\"; player.Start(); XAML <tvcontrols:OverlayPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:tvcontrols=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" xmlns:local=\"Sample.TestOverlayPage\" x:Class=\"Sample.TestOverlayPage\"> <tvcontrols:OverlayPage.Player> <tvcontrols:MediaPlayer Source=\"{Binding Source}\" AutoPlay=\"true\" UsesEmbeddingControls=\"False\"/> </tvcontrols:OverlayPage.Player> </tvcontrols:OverlayPage> PlaybackState MediaPlayer has a PlaybackState. Some APIs only work on the certain state and some APIs transit the state. State diagram of PlaybackState Video output type Overlay It displays video data on the overlay plane. It is more efficient and fast but has a limit shape. Usually it is used to display the video as fullscreen. OverlayPage OverlayMediaView Associating Player with media view MediaPlayer and video output are created independently. The developer needs to associate Player and the video output to display video data. Use Player property of OverlayMediaView <tvcontrols:OverlayMediaView> <tvcontrols:OverlayMediaView.Player> <tvcontrols:MediaPlayer Source=\"{Binding Source}\"/> </tvcontrols:OverlayMediaView.Player> </tvcontrols:OverlayMediaView> var overlayMediaView = new OverlayMediaView(); overlayMediaView.Player = new MediaPlayer(); Use VideoOutput property of Player var player = new MediaPlayer(); player.VideoOutput = new OverlayPage(); Embedding controls By default, MediaPlayer provides an embedding control. If you don't want to use the default embedding controls, set UsesEmbeddingControls to false. public bool UsesEmbeddingControls AutoPlay/AutoStop Video can't play before media view is shown, so you need to know when the media views are available. If you use AutoPlay/AutoStop property, you don't need to care about the view state. AutoPlay public bool AutoPlay Automatically starts a player when a View is shown (Rendered). AutoStop public bool AutoStop Automatically stops a player when a View is gone (Renderer was disposed). Related Links Sample"
  },
  "guides/InputEvents.html": {
    "href": "guides/InputEvents.html",
    "title": "InputEvents",
    "keywords": "InputEvents InputEvents helps developers to handle the remote control events that are emitted from TV devices. The RemoteKeyHandler which contains a Command and key events can be added to a collection of handlers. The access key can be set to a specific view and the view gets a direct focus when the key is pressed. When the view is a Button , Clicked event occurs also. How to add RemoteKeyHandler Get a collection of handlers using GetEventHandlers(BindableObject view) , and add RemoteKeyHandler to it. xaml <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:uicontrols=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" x:Class=\"Sample.TestRemoteControl_xaml\" x:Name=\"rootPage\"> <ContentPage.Content> <StackLayout> <Button Text=\"Button1\"> <uicontrols:InputEvents.EventHandlers> <uicontrols:RemoteKeyHandler Command=\"{Binding ButtonHandler, Source={x:Reference rootPage}}\"/> </uicontrols:InputEvents.EventHandlers> </Button> </StackLayout> </ContentPage.Content> </ContentPage> C# public class TestRemoteControl : ContentPage { public TestRemoteControl() { Button button1 = new Button { Text = \"Button1\" }; RemoteKeyHandler buttonHandler = new RemoteKeyHandler(new Action<RemoteControlKeyEventArgs>((arg) => { button1.Text = $\"Button1 : {arg.KeyType} {arg.KeyName} {arg.PlatformKeyName}\"; })); InputEvents.GetEventHandlers(button1).Add(buttonHandler); Content = new StackLayout { Children = { button1, } }; } } How to set an access key xaml <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:uicontrols=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" x:Class=\"Sample.TestRemoteControl_xaml\" x:Name=\"rootPage\"> <ContentPage.Content> <StackLayout> <Button Text=\"Button1 (accesskey 1)\" uicontrols:InputEvents.AccessKey=\"NUM1\" Clicked=\"OnClicked\" /> </StackLayout> </ContentPage.Content> </ContentPage> C# public class TestRemoteControl : ContentPage { int _clickedTimes = 0; public TestRemoteControl() { Button button1 = new Button { Text = \"Button2 (Accesskey 1)\" }; button1.Clicked += (s, e) => { button1.Text = $\"Button1 (Accesskey 1): {++_clickedTimes} clicked\"; }; InputEvents.SetAccessKey(button1, RemoteControlKeyNames.NUM1); Content = new StackLayout { Children = { button1, } }; } }"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Tizen TV UI Controls",
    "keywords": "Tizen TV UI Controls This document is the API Specification for the Tizen TV UIControls. Namespace Description Tizen.TV.UIControls.Forms Provide the classes that help creating Tizen TV applications."
  },
  "guides/Troubleshooter.html": {
    "href": "guides/Troubleshooter.html",
    "title": "Troubleshooter",
    "keywords": "Troubleshooter Install Tizen.TV.UIControls package to your TV application to resolve the following limitations. The Tizen.TV.UIControls package will replace the default renderers for Xamarin.Forms.Entry and Xamarin.Forms.Editor to resolve the issues described below. The following limitations are reproduced on 2018 TV models that use Tizen 4.0 platform. Limitations Entry When Xamarin.Forms.Entry gets the focus, the Input Panel is showed automatically on the screen to allow a user to enter the text. However, the Input Panel: is not closed, when Done or Cancel key is pressed. is not closed, when Back key on the remote control is pressed. does not invoke the Entry.Completed event, when Done key is pressed. Editor When Xamarin.Forms.Editor gets the focus, the Input Panel is showed automatically on the screen to allow a user to enter the text. However, the Input Panel: is not closed, when Done or Cancel key is pressed. is not closed, when Back key on the remote control is pressed. does not invoke the Entry.Completed event, when Done key is pressed."
  },
  "api/Tizen.TV.UIControls.Forms.ItemRealizedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ItemRealizedEventArgs.html",
    "title": "Class ItemRealizedEventArgs",
    "keywords": "Class ItemRealizedEventArgs Event arguments for the ItemRealized event. Inheritance System.Object System.EventArgs ItemRealizedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ItemRealizedEventArgs : EventArgs Properties Item The attached item. Declaration public object Item { get; set; } Property Value Type Description System.Object RealizedView The attached view. Declaration public View RealizedView { get; set; } Property Value Type Description View"
  },
  "api/Tizen.TV.UIControls.Forms.DrawerMode.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DrawerMode.html",
    "title": "Enum DrawerMode",
    "keywords": "Enum DrawerMode Enumeration that specifies the DrawerMode Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum DrawerMode Fields Name Description Overlap Drawer view is overlapped above content view Panning Content view is moved to side Resize Content view is resized to open drawer view"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteKeyHandler.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteKeyHandler.html",
    "title": "Class RemoteKeyHandler",
    "keywords": "Class RemoteKeyHandler The RemoteKeyHandler contains a command and key events that react to remote controller events. Inheritance System.Object RemoteKeyHandler Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class RemoteKeyHandler : BindableObject Constructors RemoteKeyHandler() Initializes a new instance of the RemoteKeyHandler class. Declaration public RemoteKeyHandler() RemoteKeyHandler(Action<RemoteControlKeyEventArgs>) Initializes a new instance of the RemoteKeyHandler class with its action which is set to Command. Declaration public RemoteKeyHandler(Action<RemoteControlKeyEventArgs> action) Parameters Type Name Description System.Action < RemoteControlKeyEventArgs > action An action to invoke when the remote control event is activated. RemoteKeyHandler(Action<RemoteControlKeyEventArgs>, RemoteControlKeyTypes) Initializes a new instance of the RemoteKeyHandler class with its action which is set to Command and key type. Declaration public RemoteKeyHandler(Action<RemoteControlKeyEventArgs> action, RemoteControlKeyTypes keyType) Parameters Type Name Description System.Action < RemoteControlKeyEventArgs > action An action to invoke when the remote control event with the specifiec key type is invoked. RemoteControlKeyTypes keyType A key type to invoke the action. Fields CommandProperty Backing store for the Command bindable property. Declaration public static readonly BindableProperty CommandProperty Field Value Type Description BindableProperty Properties Command Gets or sets a command that invokes when the remote control key event is emitted. Declaration public ICommand Command { get; set; } Property Value Type Description System.Windows.Input.ICommand Events KeyDown Occurs when the remote control key is pressed. Declaration public event EventHandler<RemoteControlKeyEventArgs> KeyDown Event Type Type Description System.EventHandler < RemoteControlKeyEventArgs > KeyUp Occurs when the remote control key is released. Declaration public event EventHandler<RemoteControlKeyEventArgs> KeyUp Event Type Type Description System.EventHandler < RemoteControlKeyEventArgs >"
  },
  "api/Tizen.TV.UIControls.Forms.EmbeddingControls.html": {
    "href": "api/Tizen.TV.UIControls.Forms.EmbeddingControls.html",
    "title": "Class EmbeddingControls",
    "keywords": "Class EmbeddingControls A built-in media controls. Inheritance System.Object EmbeddingControls Implements ContentView Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class EmbeddingControls : Xamarin.Forms.ContentView, ContentView Constructors EmbeddingControls() Internal use only, initializes a new instance of the EmbeddingControls. Declaration public EmbeddingControls() Methods OnBindingContextChanged() Declaration protected override void OnBindingContextChanged() Implements ContentView"
  },
  "api/Tizen.TV.UIControls.Forms.ContentButton.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ContentButton.html",
    "title": "Class ContentButton",
    "keywords": "Class ContentButton The ContentButton is a Button, which allows you to customize the View to be displayed. Inheritance System.Object ContentButton Implements IButtonController Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ContentButton : ContentView, IButtonController Fields CommandParameterProperty BindableProperty. Identifies the CommandParameter bindable property. Declaration public static readonly BindableProperty CommandParameterProperty Field Value Type Description BindableProperty CommandProperty BindableProperty. Identifies the Command bindable property. Declaration public static readonly BindableProperty CommandProperty Field Value Type Description BindableProperty Properties Command Gets or sets command that is executed when the button is clicked. Declaration public ICommand Command { get; set; } Property Value Type Description System.Windows.Input.ICommand CommandParameter Gets or sets command paramter that is executed when the button is clicked. Declaration public object CommandParameter { get; set; } Property Value Type Description System.Object Methods OnBindingContextChanged() Declaration protected override void OnBindingContextChanged() Events Clicked Occurs when the button is clicked. Declaration public event EventHandler Clicked Event Type Type Description System.EventHandler Pressed Occurs when the button is pressed. Declaration public event EventHandler Pressed Event Type Type Description System.EventHandler Released Occurs when the button is released. Declaration public event EventHandler Released Event Type Type Description System.EventHandler Implements IButtonController"
  },
  "api/Tizen.TV.UIControls.Forms.RecycleItemsViewOrientation.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RecycleItemsViewOrientation.html",
    "title": "Enum RecycleItemsViewOrientation",
    "keywords": "Enum RecycleItemsViewOrientation The orientations the a RecycleItemsView can have. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum RecycleItemsViewOrientation Fields Name Description Horizontal RecycleItemsView should be horizontally oriented. Vertical should be vertically oriented."
  },
  "guides/FocusFrame.html": {
    "href": "guides/FocusFrame.html",
    "title": "FocusFrame",
    "keywords": "FocusFrame FocusFrame helps developers to decorate a focused view. it contain a view to represent and if it got a focus, backgroud color of FocusFrame is changed How to use it Set a Content property using a view that a target of focus, set FocusedColor to want. (default color is Orange) xaml <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:tv=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" x:Class=\"Sample.FocusFrameTest\" x:Name=\"rootPage\"> <ContentPage.Content> <StackLayout> <tv:FocusFrame FocusedColor=\"Blue\"> <Button Text=\"Button1\"/> </tv:FocusFrame> </StackLayout> </ContentPage.Content> </ContentPage> C# public class FocusFrameTest : ContentPage { public FocusFrameTest() { Button button1 = new Button { Text = \"Button1\" }; FocusFrame focusFrame = new FocusFrame { FocusedColor = Color.Blue, Content = Button1 }; Content = new StackLayout { Children = { focusFrame, } }; } } How to override the focus effect Overriding OnContentFocused method and implements decorating code public class MyFocusFrame : FocusFrame { protected override void OnContentFocused(bool isFocused) { if (isFocused) { Content.ScaleTo(1.5); } else { Content.ScaleTo(1); } } } <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:tv=\"clr-namespace:Tizen.TV.UIControls.Forms;assembly=Tizen.TV.UIControls.Forms\" xmlns:local=\"clr-namespace:Sample.Focus\" x:Class=\"Sample.FocusFrameTest\"> <ContentPage.Content> <StackLayout> <local:MyFocusFrame> <Button Text=\"Button1\"/> </tv:MyFocusFrame> </StackLayout> </ContentPage.Content> </ContentPage>"
  },
  "api/Tizen.TV.UIControls.Forms.FileMediaSourceConverter.html": {
    "href": "api/Tizen.TV.UIControls.Forms.FileMediaSourceConverter.html",
    "title": "Class FileMediaSourceConverter",
    "keywords": "Class FileMediaSourceConverter A TypeConverter that converts to FileMediaSource. Inheritance System.Object FileMediaSourceConverter Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class FileMediaSourceConverter : TypeConverter Methods ConvertFromInvariantString(String) Creates a file media source given a path to a media. Declaration public override object ConvertFromInvariantString(string value) Parameters Type Name Description System.String value The value to convert. Returns Type Description System.Object FileMediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.ContentPopupManager.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ContentPopupManager.html",
    "title": "Class ContentPopupManager",
    "keywords": "Class ContentPopupManager Inheritance System.Object ContentPopupManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public static class ContentPopupManager Methods ShowPopup(INavigation, ContentPopup) Declaration public static Task ShowPopup(this INavigation navigation, ContentPopup popup) Parameters Type Name Description INavigation navigation ContentPopup popup Returns Type Description System.Threading.Tasks.Task ShowPopup(ContentPopup) Declaration public static Task ShowPopup(ContentPopup popup) Parameters Type Name Description ContentPopup popup Returns Type Description System.Threading.Tasks.Task"
  },
  "api/Tizen.TV.UIControls.Forms.PlaybackState.html": {
    "href": "api/Tizen.TV.UIControls.Forms.PlaybackState.html",
    "title": "Enum PlaybackState",
    "keywords": "Enum PlaybackState Enumerates values that define the playback state of the media content. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum PlaybackState Fields Name Description Paused Paused while playing media. Playing Playing. Stopped Stopped."
  },
  "api/Tizen.TV.UIControls.Forms.IPlatformMediaPlayer.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IPlatformMediaPlayer.html",
    "title": "Interface IPlatformMediaPlayer",
    "keywords": "Interface IPlatformMediaPlayer For internal use by platform renderers. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IPlatformMediaPlayer Properties AspectMode Declaration DisplayAspectMode AspectMode { get; set; } Property Value Type Description DisplayAspectMode AutoPlay Declaration bool AutoPlay { get; set; } Property Value Type Description System.Boolean AutoStop Declaration bool AutoStop { get; set; } Property Value Type Description System.Boolean Duration Declaration int Duration { get; } Property Value Type Description System.Int32 IsLooping Declaration bool IsLooping { get; set; } Property Value Type Description System.Boolean IsMuted Declaration bool IsMuted { get; set; } Property Value Type Description System.Boolean Position Declaration int Position { get; } Property Value Type Description System.Int32 UsesEmbeddingControls Declaration bool UsesEmbeddingControls { get; set; } Property Value Type Description System.Boolean Volume Declaration double Volume { get; set; } Property Value Type Description System.Double Methods GetAlbumArts() Declaration Task<Stream> GetAlbumArts() Returns Type Description System.Threading.Tasks.Task < System.IO.Stream > GetMetadata() Declaration Task<IDictionary<string, string>> GetMetadata() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IDictionary < System.String , System.String >> Pause() Declaration void Pause() Seek(Int32) Declaration Task<int> Seek(int ms) Parameters Type Name Description System.Int32 ms Returns Type Description System.Threading.Tasks.Task < System.Int32 > SetDisplay(IVideoOutput) Declaration void SetDisplay(IVideoOutput output) Parameters Type Name Description IVideoOutput output SetSource(MediaSource) Declaration void SetSource(MediaSource source) Parameters Type Name Description MediaSource source Start() Declaration Task<bool> Start() Returns Type Description System.Threading.Tasks.Task < System.Boolean > Stop() Declaration void Stop() Events BufferingProgressUpdated Declaration event EventHandler<BufferingProgressUpdatedEventArgs> BufferingProgressUpdated Event Type Type Description System.EventHandler < BufferingProgressUpdatedEventArgs > PlaybackCompleted Declaration event EventHandler PlaybackCompleted Event Type Type Description System.EventHandler PlaybackPaused Declaration event EventHandler PlaybackPaused Event Type Type Description System.EventHandler PlaybackStarted Declaration event EventHandler PlaybackStarted Event Type Type Description System.EventHandler PlaybackStopped Declaration event EventHandler PlaybackStopped Event Type Type Description System.EventHandler UpdateStreamInfo Declaration event EventHandler UpdateStreamInfo Event Type Type Description System.EventHandler"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteControlKeyTypes.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteControlKeyTypes.html",
    "title": "Enum RemoteControlKeyTypes",
    "keywords": "Enum RemoteControlKeyTypes Enumeration that specifies the remote control key types. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax [Flags] public enum RemoteControlKeyTypes Fields Name Description KeyDown The Key down event type. KeyUp The Key up event type."
  },
  "api/Tizen.TV.UIControls.Forms.MediaPlayer.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaPlayer.html",
    "title": "Class MediaPlayer",
    "keywords": "Class MediaPlayer MediaPlayer provieds the essential components to play the media contents. Inheritance System.Object MediaPlayer Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class MediaPlayer : Element Constructors MediaPlayer() Initializes a new instance of the MediaPlayer class. Declaration public MediaPlayer() Fields AspectModeProperty Identifies the AspectMode bindable property. Declaration public static readonly BindableProperty AspectModeProperty Field Value Type Description BindableProperty AutoPlayProperty Identifies the AutoPlay bindable property. Declaration public static readonly BindableProperty AutoPlayProperty Field Value Type Description BindableProperty AutoStopProperty Identifies the AutoStop bindable property. Declaration public static readonly BindableProperty AutoStopProperty Field Value Type Description BindableProperty BufferingProgressProperty Identifies the BufferingProgress bindable property. Declaration public static readonly BindableProperty BufferingProgressProperty Field Value Type Description BindableProperty DurationProperty Identifies the Duration bindable property. Declaration public static readonly BindableProperty DurationProperty Field Value Type Description BindableProperty IsBufferingProperty Identifies the IsBuffering bindable property. Declaration public static readonly BindableProperty IsBufferingProperty Field Value Type Description BindableProperty IsLoopingProperty Identifies the IsLooping bindable property. Declaration public static readonly BindableProperty IsLoopingProperty Field Value Type Description BindableProperty IsMutedProperty Identifies the IsMuted bindable property. Declaration public static readonly BindableProperty IsMutedProperty Field Value Type Description BindableProperty PositionProperty Identifies the Position bindable property. Declaration public static readonly BindableProperty PositionProperty Field Value Type Description BindableProperty PositionUpdateIntervalProperty Identifies the PositionUpdateInterval bindable property. Declaration public static readonly BindableProperty PositionUpdateIntervalProperty Field Value Type Description BindableProperty SourceProperty Identifies the Source bindable property. Declaration public static readonly BindableProperty SourceProperty Field Value Type Description BindableProperty StateProperty Identifies the State bindable property. Declaration public static readonly BindableProperty StateProperty Field Value Type Description BindableProperty UsesEmbeddingControlsProperty Identifies the UsesEmbeddingControls bindable property. Declaration public static readonly BindableProperty UsesEmbeddingControlsProperty Field Value Type Description BindableProperty VideoOutputProperty Identifies the VideoOutput bindable property. Declaration public static readonly BindableProperty VideoOutputProperty Field Value Type Description BindableProperty VolumeProperty Identifies the Volume bindable property. Declaration public static readonly BindableProperty VolumeProperty Field Value Type Description BindableProperty Properties AspectMode Gets or sets the scaling mode for the media content. Declaration public DisplayAspectMode AspectMode { get; set; } Property Value Type Description DisplayAspectMode AutoPlay Gets or sets a value whether the media content plays automatically. Declaration public bool AutoPlay { get; set; } Property Value Type Description System.Boolean AutoStop Gets or sets a value whether the media content stops automatically. Declaration public bool AutoStop { get; set; } Property Value Type Description System.Boolean BufferingProgress Gets the value indicating the buffering percentage. Declaration public double BufferingProgress { get; } Property Value Type Description System.Double Duration Gets the duration of a media content. Declaration public int Duration { get; } Property Value Type Description System.Int32 IsBuffering Gets a value indicating the buffering status. Declaration public bool IsBuffering { get; } Property Value Type Description System.Boolean IsLooping Gets or sets the value whether the volume is looping or not. Declaration public bool IsLooping { get; set; } Property Value Type Description System.Boolean IsMuted Gets or sets the value whether the volume is muted. Declaration public bool IsMuted { get; set; } Property Value Type Description System.Boolean Position Gets the value of the current position of the media content. Declaration public int Position { get; } Property Value Type Description System.Int32 PositionUpdateInterval Gets or sets the desired interval time for updating position. Declaration public int PositionUpdateInterval { get; set; } Property Value Type Description System.Int32 Source Gets or sets the source of the media content. Declaration public MediaSource Source { get; set; } Property Value Type Description MediaSource Remarks The \" http://developer.samsung.com/privilege/drmplay&quot ; privilege is required in case of DRMMediaSource. State Gets the current playback state. Declaration public PlaybackState State { get; } Property Value Type Description PlaybackState UsesEmbeddingControls Gets or sets whether to use the embedding controls. Declaration public bool UsesEmbeddingControls { get; set; } Property Value Type Description System.Boolean VideoOutput Gets or sets the video output. Declaration public IVideoOutput VideoOutput { get; set; } Property Value Type Description IVideoOutput Volume Gets or sets the current volume of a media content. Declaration public double Volume { get; set; } Property Value Type Description System.Double Methods CreateMediaPlayerImpl() Declaration protected virtual IPlatformMediaPlayer CreateMediaPlayerImpl() Returns Type Description IPlatformMediaPlayer GetAlbumArts() Retrieves the album art of the stream, or null if there is no album art data. Declaration public Task<Stream> GetAlbumArts() Returns Type Description System.Threading.Tasks.Task < System.IO.Stream > Returns a Task that gets the album art of the stream GetMetadata() Gets the metadata of the media content. Declaration public Task<IDictionary<string, string>> GetMetadata() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IDictionary < System.String , System.String >> Returns a Task that has the metadata of the media content. Pause() Pauses the player. Declaration public void Pause() Seek(Int32) Attemps to seek the playback position. Declaration public Task<int> Seek(int ms) Parameters Type Name Description System.Int32 ms The milliseconds to seek Returns Type Description System.Threading.Tasks.Task < System.Int32 > Returns a Task that seeks the play position. Start() Starts or resumes playback. Declaration public Task<bool> Start() Returns Type Description System.Threading.Tasks.Task < System.Boolean > Returns a Task that prepares the player and play the media content. Remarks The \" http://developer.samsung.com/privilege/drmplay&quot ; privilege is required if you want to start DRM-pretected content playback. Stop() Stops playing the media content. Declaration public void Stop() Events BufferingCompleted Occurs when the buffering for the media content is completed. Declaration public event EventHandler BufferingCompleted Event Type Type Description System.EventHandler BufferingStarted Occurs when the buffering for the media content is started. Declaration public event EventHandler BufferingStarted Event Type Type Description System.EventHandler PlaybackCompleted Occurs when the playback is completed. Declaration public event EventHandler PlaybackCompleted Event Type Type Description System.EventHandler PlaybackPaused Occurs when the playback is paused. Declaration public event EventHandler PlaybackPaused Event Type Type Description System.EventHandler PlaybackStarted Occurs when the playback is started. Declaration public event EventHandler PlaybackStarted Event Type Type Description System.EventHandler PlaybackStopped Occurs when the playback is stopped. Declaration public event EventHandler PlaybackStopped Event Type Type Description System.EventHandler"
  },
  "api/Tizen.TV.UIControls.Forms.UriMediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.UriMediaSource.html",
    "title": "Class UriMediaSource",
    "keywords": "Class UriMediaSource A MediaSource that loads a media from a URI Inheritance System.Object MediaSource UriMediaSource DRMMediaSource Inherited Members MediaSource.FromFile(String) MediaSource.FromUri(Uri) MediaSource.OnSourceChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class UriMediaSource : MediaSource Fields UriProperty Identifies the File bindable property. Declaration public static readonly BindableProperty UriProperty Field Value Type Description BindableProperty Properties Uri Gets or sets the URI for the media to get. Declaration public Uri Uri { get; set; } Property Value Type Description System.Uri Methods OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName ToString() Returns the path to the file for the media, prefixed with the string, \"Uri: \". Declaration public override string ToString() Returns Type Description System.String Operators Implicit(Uri to UriMediaSource) Allows implicit casting from a Uri. Declaration public static implicit operator UriMediaSource(Uri uri) Parameters Type Name Description System.Uri uri Returns Type Description UriMediaSource Implicit(UriMediaSource to String) Allows implicit casting to a string. Declaration public static implicit operator string (UriMediaSource uri) Parameters Type Name Description UriMediaSource uri Returns Type Description System.String"
  },
  "api/Tizen.TV.UIControls.Forms.PageTransition.html": {
    "href": "api/Tizen.TV.UIControls.Forms.PageTransition.html",
    "title": "Enum PageTransition",
    "keywords": "Enum PageTransition Enumerates values that define the page transition animation type. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum PageTransition Fields Name Description Fade Show a fade animation None Do not animate Scale Show a scale animation SlideFromBottom Slide from bottom to top on push, and slide from top to bottom on pop SlideFromLeft Slide from left to right on push, and slide from right to left on pop SlideFromRight Slide from right to left on push, and slide from left to right on pop SlideFromTop Slide from top to bottom on push, and slide from bottom to top on pop"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteControlKeyNames.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteControlKeyNames.html",
    "title": "Enum RemoteControlKeyNames",
    "keywords": "Enum RemoteControlKeyNames Enumeration that specifies the remote control key names. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum RemoteControlKeyNames Fields Name Description Back Back. Blue Blue. ChannelGuide Channel guide. Down Down. Exit Exit. Green Green. Info Information. Left Left. LowerChannel Lower channel. LowerVolume Lower volume. Minus Minus. Mute Mute. Next Next. NextChapter Next Chapter. NUM0 0 NUM1 1 NUM2 2 NUM3 3 NUM4 4 NUM5 5 NUM6 6 NUM7 7 NUM8 8 NUM9 9 Pause Pause. Play Play. PlayBack Playback. PreviousChannel Previous channel. PreviousChapter Previous chapter. RaiseChannel Raise channel. RaiseVolume Raise volume. Record Record. Red Red. Return Return. Rewind Rewind. Right Right. SimpleMenu Simple menu. Stop Stop. Unknown An undefined key name. Up Up. Yellow Yellow."
  },
  "api/Tizen.TV.UIControls.Forms.IOverlayOutput.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IOverlayOutput.html",
    "title": "Interface IOverlayOutput",
    "keywords": "Interface IOverlayOutput Interface for defining the overlay type of output. Inherited Members IVideoOutput.MediaView IVideoOutput.Controller IVideoOutput.OuputType Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IOverlayOutput : IVideoOutput Properties OverlayArea Declaration Rectangle OverlayArea { get; } Property Value Type Description Rectangle Events AreaUpdated Declaration event EventHandler AreaUpdated Event Type Type Description System.EventHandler"
  },
  "api/Tizen.TV.UIControls.Forms.ItemUnrealizedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ItemUnrealizedEventArgs.html",
    "title": "Class ItemUnrealizedEventArgs",
    "keywords": "Class ItemUnrealizedEventArgs Event arguments for the ItemUnrealized event. Inheritance System.Object System.EventArgs ItemUnrealizedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ItemUnrealizedEventArgs : EventArgs Properties Item The detached item. Declaration public object Item { get; set; } Property Value Type Description System.Object UnrealizedView The detached view. Declaration public View UnrealizedView { get; set; } Property Value Type Description View"
  },
  "api/Tizen.TV.UIControls.Forms.OverlayMediaView.html": {
    "href": "api/Tizen.TV.UIControls.Forms.OverlayMediaView.html",
    "title": "Class OverlayMediaView",
    "keywords": "Class OverlayMediaView An overlay MediaView. Inheritance System.Object MediaView OverlayMediaView Implements IOverlayOutput IVideoOutput Inherited Members MediaView.PlayerProperty MediaView.Player MediaView.IVideoOutput.MediaView MediaView.IVideoOutput.Controller MediaView.LayoutChildren(Double, Double, Double, Double) MediaView.OnMeasure(Double, Double) MediaView.OnBindingContextChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class OverlayMediaView : MediaView, IOverlayOutput, IVideoOutput Constructors OverlayMediaView() Initializes a new instance of the OverlayMediaView class. Declaration public OverlayMediaView() Fields OverlayAreaProperty Identifies the OverlayArea bindable property. Declaration public static readonly BindableProperty OverlayAreaProperty Field Value Type Description BindableProperty Properties OuputType Gets the video output type. Declaration public override VideoOuputType OuputType { get; } Property Value Type Description VideoOuputType Overrides MediaView.OuputType OverlayArea Gets the overlay area. Declaration public Rectangle OverlayArea { get; } Property Value Type Description Rectangle Methods OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Events AreaUpdated Occurs when the overlay area is updated. Declaration public event EventHandler AreaUpdated Event Type Type Description System.EventHandler Implements IOverlayOutput IVideoOutput"
  },
  "api/Tizen.TV.UIControls.Forms.DrawerLayout.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DrawerLayout.html",
    "title": "Class DrawerLayout",
    "keywords": "Class DrawerLayout DrawerLayout is a kind of Layout that acts like a MasterDetailPage . Inheritance System.Object DrawerLayout Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class DrawerLayout : Layout<View> Constructors DrawerLayout() Creates and initializes a new instance of the DrawerLayout class. Declaration public DrawerLayout() Fields ClosedWidthProperty Identifies the ClosedWidth bindable property. Declaration public static readonly BindableProperty ClosedWidthProperty Field Value Type Description BindableProperty ContentProperty Identifies the Content bindable property. Declaration public static readonly BindableProperty ContentProperty Field Value Type Description BindableProperty DrawerModeProperty Identifies the DrawerMode bindable property. Declaration public static readonly BindableProperty DrawerModeProperty Field Value Type Description BindableProperty DrawerPositionProperty Identifies the DrawerPosition bindable property. Declaration public static readonly BindableProperty DrawerPositionProperty Field Value Type Description BindableProperty DrawerProperty Identifies the Drawer bindable property. Declaration public static readonly BindableProperty DrawerProperty Field Value Type Description BindableProperty DrawerWidthProperty Identifies the DrawerWidth bindable property. Declaration public static readonly BindableProperty DrawerWidthProperty Field Value Type Description BindableProperty IsOpenProperty Identifies the IsOpen bindable property. Declaration public static readonly BindableProperty IsOpenProperty Field Value Type Description BindableProperty OpenRatioProperty Identifies the Content bindable property. Declaration public static readonly BindableProperty OpenRatioProperty Field Value Type Description BindableProperty Properties Content Gets or sets a view to place content area Declaration public View Content { get; set; } Property Value Type Description View Drawer Gets or sets a view to place drawer area Declaration public View Drawer { get; set; } Property Value Type Description View DrawerClosedWidth Gets or sets a value that represents the width of closed drawer. Declaration public double DrawerClosedWidth { get; set; } Property Value Type Description System.Double DrawerMode Gets or sets a value that represents the drawer mode Declaration public DrawerMode DrawerMode { get; set; } Property Value Type Description DrawerMode DrawerPosition Gets or sets a value that represents position of drawer Declaration public DrawerPosition DrawerPosition { get; set; } Property Value Type Description DrawerPosition DrawerWidth Gets or sets a value that represents the width of drawer. Declaration public double DrawerWidth { get; set; } Property Value Type Description System.Double IsOpen Gets or sets a value that represents state of drawer open Declaration public bool IsOpen { get; set; } Property Value Type Description System.Boolean OpenRatio Gets a value that represents persent of drawer open ratio 0(closed) ~ opened(1.0) Declaration public double OpenRatio { get; } Property Value Type Description System.Double Methods LayoutChildren(Double, Double, Double, Double) Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description System.Double x System.Double y System.Double width System.Double height OnMeasure(Double, Double) Declaration protected override SizeRequest OnMeasure(double widthConstraint, double heightConstraint) Parameters Type Name Description System.Double widthConstraint System.Double heightConstraint Returns Type Description SizeRequest Events DrawerClosed Event that is raised when drawer was closed. Declaration public event EventHandler DrawerClosed Event Type Type Description System.EventHandler DrawerOpened Event that is raised when drawer was opened. Declaration public event EventHandler DrawerOpened Event Type Type Description System.EventHandler"
  },
  "api/Tizen.TV.UIControls.Forms.BufferingProgressUpdatedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.BufferingProgressUpdatedEventArgs.html",
    "title": "Class BufferingProgressUpdatedEventArgs",
    "keywords": "Class BufferingProgressUpdatedEventArgs Internal use only. Contains arguments for the event that is raised when the buffering progress is updated. Inheritance System.Object System.EventArgs BufferingProgressUpdatedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class BufferingProgressUpdatedEventArgs : EventArgs Properties Progress The value indicating the buffering status(0-1). Declaration public double Progress { get; set; } Property Value Type Description System.Double"
  },
  "api/Tizen.TV.UIControls.Forms.MediaView.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaView.html",
    "title": "Class MediaView",
    "keywords": "Class MediaView The MediaView class is an abstract class whose subclasses can be used to display the video output on the screen. Inheritance System.Object MediaView OverlayMediaView Implements IVideoOutput Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public abstract class MediaView : Layout<View>, IVideoOutput Fields PlayerProperty Identifies the Player bindable property. Declaration public static readonly BindableProperty PlayerProperty Field Value Type Description BindableProperty Properties OuputType Gets the video output type. Declaration public virtual VideoOuputType OuputType { get; } Property Value Type Description VideoOuputType Player Gets or sets the media player. Declaration public MediaPlayer Player { get; set; } Property Value Type Description MediaPlayer Methods LayoutChildren(Double, Double, Double, Double) Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description System.Double x System.Double y System.Double width System.Double height OnBindingContextChanged() Declaration protected override void OnBindingContextChanged() OnMeasure(Double, Double) Declaration protected override SizeRequest OnMeasure(double widthConstraint, double heightConstraint) Parameters Type Name Description System.Double widthConstraint System.Double heightConstraint Returns Type Description SizeRequest Explicit Interface Implementations IVideoOutput.Controller Declaration View IVideoOutput.Controller { get; set; } Returns Type Description View IVideoOutput.MediaView Declaration VisualElement IVideoOutput.MediaView { get; } Returns Type Description VisualElement Implements IVideoOutput"
  },
  "api/Tizen.TV.UIControls.Forms.FocusedItemChangedEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.FocusedItemChangedEventArgs.html",
    "title": "Class FocusedItemChangedEventArgs",
    "keywords": "Class FocusedItemChangedEventArgs Event arguments for the ItemFocused event. Inheritance System.Object System.EventArgs FocusedItemChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class FocusedItemChangedEventArgs : EventArgs Constructors FocusedItemChangedEventArgs(Object, Int32) Creates a new FocusedItemChangedEventArgs event that indicates that the user has focused. Declaration public FocusedItemChangedEventArgs(object focusedItem, int focusedItemIndex) Parameters Type Name Description System.Object focusedItem The item is focused. System.Int32 focusedItemIndex The item's index is focused. Properties FocusedItem Gets the new focused item. Declaration public object FocusedItem { get; } Property Value Type Description System.Object FocusedItemIndex Gets the new focused item's index. Declaration public int FocusedItemIndex { get; } Property Value Type Description System.Int32"
  },
  "api/Tizen.TV.UIControls.Forms.DRMMediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DRMMediaSource.html",
    "title": "Class DRMMediaSource",
    "keywords": "Class DRMMediaSource Inheritance System.Object MediaSource UriMediaSource DRMMediaSource Inherited Members UriMediaSource.UriProperty UriMediaSource.Uri UriMediaSource.ToString() UriMediaSource.OnPropertyChanged(String) MediaSource.FromFile(String) MediaSource.FromUri(Uri) MediaSource.OnSourceChanged() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class DRMMediaSource : UriMediaSource Properties ExtraData Declaration public Dictionary<string, DRMPropertyValue> ExtraData { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , DRMPropertyValue > LicenseUrl Declaration public string LicenseUrl { get; set; } Property Value Type Description System.String"
  },
  "api/Tizen.TV.UIControls.Forms.RemoteControlKeyEventArgs.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RemoteControlKeyEventArgs.html",
    "title": "Class RemoteControlKeyEventArgs",
    "keywords": "Class RemoteControlKeyEventArgs Arguments for the event that is raised when a remote control key is pressed or released. Inheritance System.Object System.EventArgs RemoteControlKeyEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class RemoteControlKeyEventArgs : EventArgs Constructors RemoteControlKeyEventArgs(VisualElement, RemoteControlKeyTypes, RemoteControlKeyNames, String) Constructs a new RemoteControlKeyEventArgs object for a key type, key name, and platform key name. Declaration public RemoteControlKeyEventArgs(VisualElement sender, RemoteControlKeyTypes keyType, RemoteControlKeyNames keyName, string platformKeyName) Parameters Type Name Description VisualElement sender The VisualElement that sends the event. RemoteControlKeyTypes keyType The type of a remote control key. RemoteControlKeyNames keyName The name of a remote control key. System.String platformKeyName The name of a platform key name. Properties Handled Gets or sets a value that indicates whether the remote control key event has already been handled. Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean KeyName The name of a remote control key. Declaration public RemoteControlKeyNames KeyName { get; } Property Value Type Description RemoteControlKeyNames KeyType The type of a remote control key. Declaration public RemoteControlKeyTypes KeyType { get; } Property Value Type Description RemoteControlKeyTypes PlatformKeyName The name of a platform key name. Declaration public string PlatformKeyName { get; } Property Value Type Description System.String Sender The sender of a remote control key. Declaration public VisualElement Sender { get; } Property Value Type Description VisualElement"
  },
  "api/Tizen.TV.UIControls.Forms.Focus.html": {
    "href": "api/Tizen.TV.UIControls.Forms.Focus.html",
    "title": "Class Focus",
    "keywords": "Class Focus Inheritance System.Object Focus Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public static class Focus Fields DownProperty Declaration public static readonly BindableProperty DownProperty Field Value Type Description BindableProperty LeftProperty Declaration public static readonly BindableProperty LeftProperty Field Value Type Description BindableProperty RightProperty Declaration public static readonly BindableProperty RightProperty Field Value Type Description BindableProperty UpProperty Declaration public static readonly BindableProperty UpProperty Field Value Type Description BindableProperty Methods GetDown(BindableObject) Declaration public static VisualElement GetDown(BindableObject view) Parameters Type Name Description BindableObject view Returns Type Description VisualElement GetLeft(BindableObject) Declaration public static VisualElement GetLeft(BindableObject view) Parameters Type Name Description BindableObject view Returns Type Description VisualElement GetRight(BindableObject) Declaration public static VisualElement GetRight(BindableObject view) Parameters Type Name Description BindableObject view Returns Type Description VisualElement GetUp(BindableObject) Declaration public static VisualElement GetUp(BindableObject view) Parameters Type Name Description BindableObject view Returns Type Description VisualElement SetDown(BindableObject, VisualElement) Declaration public static void SetDown(BindableObject view, VisualElement value) Parameters Type Name Description BindableObject view VisualElement value SetLeft(BindableObject, VisualElement) Declaration public static void SetLeft(BindableObject view, VisualElement value) Parameters Type Name Description BindableObject view VisualElement value SetRight(BindableObject, VisualElement) Declaration public static void SetRight(BindableObject view, VisualElement value) Parameters Type Name Description BindableObject view VisualElement value SetUp(BindableObject, VisualElement) Declaration public static void SetUp(BindableObject view, VisualElement value) Parameters Type Name Description BindableObject view VisualElement value"
  },
  "api/Tizen.TV.UIControls.Forms.OverlayPage.html": {
    "href": "api/Tizen.TV.UIControls.Forms.OverlayPage.html",
    "title": "Class OverlayPage",
    "keywords": "Class OverlayPage The OverlayPage class is used to display the video output on a page. Inheritance System.Object OverlayPage Implements IOverlayOutput IVideoOutput Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class OverlayPage : ContentPage, IOverlayOutput, IVideoOutput Fields OverlayAreaProperty Identifies the OverlayArea bindable property. Declaration public static readonly BindableProperty OverlayAreaProperty Field Value Type Description BindableProperty PlayerProperty Identifies the Player bindable property. Declaration public static readonly BindableProperty PlayerProperty Field Value Type Description BindableProperty Properties OuputType Gets the video output type. Declaration public VideoOuputType OuputType { get; } Property Value Type Description VideoOuputType OverlayArea Gets or sets the overlay area. Declaration public Rectangle OverlayArea { get; set; } Property Value Type Description Rectangle Player Gets or sets the media player. Declaration public MediaPlayer Player { get; set; } Property Value Type Description MediaPlayer Methods LayoutChildren(Double, Double, Double, Double) Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description System.Double x System.Double y System.Double width System.Double height OnBindingContextChanged() Declaration protected override void OnBindingContextChanged() OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Events AreaUpdated Occurs when the overlay area is updated. Declaration public event EventHandler AreaUpdated Event Type Type Description System.EventHandler Explicit Interface Implementations IVideoOutput.Controller Declaration View IVideoOutput.Controller { get; set; } Returns Type Description View IVideoOutput.MediaView Declaration VisualElement IVideoOutput.MediaView { get; } Returns Type Description VisualElement Implements IOverlayOutput IVideoOutput"
  },
  "api/Tizen.TV.UIControls.Forms.FocusFrame.html": {
    "href": "api/Tizen.TV.UIControls.Forms.FocusFrame.html",
    "title": "Class FocusFrame",
    "keywords": "Class FocusFrame It is a container to decorate focused state Inheritance System.Object FocusFrame Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class FocusFrame : Frame Constructors FocusFrame() Creates and initializes a new instance of the FocusFrame class. Declaration public FocusFrame() Fields ContentFocusedCommandParameterProperty Identifies the ContentFocusedCommandParameter bindable property Declaration public static readonly BindableProperty ContentFocusedCommandParameterProperty Field Value Type Description BindableProperty ContentFocusedCommandProperty Identifies the ContentFocusedCommand bindable property Declaration public static readonly BindableProperty ContentFocusedCommandProperty Field Value Type Description BindableProperty ContentUnfocusedCommandParameterProperty Identifies the ContentUnfocusedCommandParameter bindable property Declaration public static readonly BindableProperty ContentUnfocusedCommandParameterProperty Field Value Type Description BindableProperty ContentUnfocusedCommandProperty Identifies the ContentUnfocusedCommand bindable property Declaration public static readonly BindableProperty ContentUnfocusedCommandProperty Field Value Type Description BindableProperty FocusedColorProperty Identifies the FocusedColor bindable property. Declaration public static readonly BindableProperty FocusedColorProperty Field Value Type Description BindableProperty IsContentFocusedProperty Identifies the IsContentFocused bindable property. Declaration public static readonly BindableProperty IsContentFocusedProperty Field Value Type Description BindableProperty UnfocusedColorProperty Identifies the UnfocusedColor bindable property. Declaration public static readonly BindableProperty UnfocusedColorProperty Field Value Type Description BindableProperty Properties ContentFocusedCommand Gets or sets the command to invoke when the content is focused. This is a bindable property. Declaration public ICommand ContentFocusedCommand { get; set; } Property Value Type Description System.Windows.Input.ICommand ContentFocusedCommandParameter Gets or sets the parameter to pass to the ContentFocusedCommand property. This is a bindable property. Declaration public object ContentFocusedCommandParameter { get; set; } Property Value Type Description System.Object ContentUnfocusedCommand Gets or sets the command to invoke when the content is unfocused. This is a bindable property. Declaration public ICommand ContentUnfocusedCommand { get; set; } Property Value Type Description System.Windows.Input.ICommand ContentUnfocusedCommandParameter Gets or sets the parameter to pass to the ContentUnfocusedCommand property. This is a bindable property. Declaration public object ContentUnfocusedCommandParameter { get; set; } Property Value Type Description System.Object FocusedColor Gets or sets a value that represents FocusedColor, it used for decorating focused state on content Declaration public Color FocusedColor { get; set; } Property Value Type Description Color IsContentFocused Gets a value indicating whether content is focused currently. Declaration public bool IsContentFocused { get; } Property Value Type Description System.Boolean UnfocusedColor Gets or sets a value that represents UnfocusedColor, it used for decorating unfocused state on content Declaration public Color UnfocusedColor { get; set; } Property Value Type Description Color Methods OnContentFocused(Boolean) This method was called when content's focused state was changed. To change behavior of decorating, overriding this method Declaration protected virtual void OnContentFocused(bool isFocused) Parameters Type Name Description System.Boolean isFocused This parameter indicates whether the content is focused. OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName OnPropertyChanging(String) Declaration protected override void OnPropertyChanging(string propertyName = null) Parameters Type Name Description System.String propertyName Events ContentFocused Raise when one of descendants view are focused Declaration public event EventHandler<FocusEventArgs> ContentFocused Event Type Type Description System.EventHandler < FocusEventArgs > ContentUnfocused Raise when one of descendants view are unfocused Declaration public event EventHandler<FocusEventArgs> ContentUnfocused Event Type Type Description System.EventHandler < FocusEventArgs >"
  },
  "api/Tizen.TV.UIControls.Forms.VideoOuputType.html": {
    "href": "api/Tizen.TV.UIControls.Forms.VideoOuputType.html",
    "title": "Enum VideoOuputType",
    "keywords": "Enum VideoOuputType Enumeration that specifies the video ouput. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum VideoOuputType Fields Name Description Buffer A buffer type. Overlay An overlay type."
  },
  "api/Tizen.TV.UIControls.Forms.AnimatedContentPage.html": {
    "href": "api/Tizen.TV.UIControls.Forms.AnimatedContentPage.html",
    "title": "Class AnimatedContentPage",
    "keywords": "Class AnimatedContentPage A ContentPage that support animation when switching pages. Inheritance System.Object AnimatedContentPage Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class AnimatedContentPage : ContentPage Fields PageTransitionProperty Identifies the PageTransition bindable property. Declaration public static readonly BindableProperty PageTransitionProperty Field Value Type Description BindableProperty Properties PageTranistion Gets or sets the page transition Declaration public PageTransition PageTranistion { get; set; } Property Value Type Description PageTransition"
  },
  "api/Tizen.TV.UIControls.Forms.IContentPopupRenderer.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IContentPopupRenderer.html",
    "title": "Interface IContentPopupRenderer",
    "keywords": "Interface IContentPopupRenderer Base interface for ContentPopup renderer. Inherited Members System.IDisposable.Dispose() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IContentPopupRenderer : IDisposable Methods Open() Open a popup. Declaration Task Open() Returns Type Description System.Threading.Tasks.Task Returns a Task with the dismiss result of the popup. SetElement(ContentPopup) Sets the Element associated with this renderer. Declaration void SetElement(ContentPopup element) Parameters Type Name Description ContentPopup element New element."
  },
  "api/Tizen.TV.UIControls.Forms.IRecycleItemsViewController.html": {
    "href": "api/Tizen.TV.UIControls.Forms.IRecycleItemsViewController.html",
    "title": "Interface IRecycleItemsViewController",
    "keywords": "Interface IRecycleItemsViewController This interface is for internal use. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public interface IRecycleItemsViewController Properties FocusedView Declaration View FocusedView { get; } Property Value Type Description View ScrollBounds Declaration Rectangle ScrollBounds { get; } Property Value Type Description Rectangle Methods SendKeyDown(String) Declaration bool SendKeyDown(string keyname) Parameters Type Name Description System.String keyname Returns Type Description System.Boolean"
  },
  "api/Tizen.TV.UIControls.Forms.InputEvents.html": {
    "href": "api/Tizen.TV.UIControls.Forms.InputEvents.html",
    "title": "Class InputEvents",
    "keywords": "Class InputEvents The InputEvents class helps developers to handle the remote control events that are emitted from TV devices. Inheritance System.Object InputEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public sealed class InputEvents Fields AccessKeyProperty Identifies the access key that is set to the object at run time. Declaration public static readonly BindableProperty AccessKeyProperty Field Value Type Description BindableProperty EventHandlersProperty Implements the attached property that is a collection of RemoteKeyHandler s. Declaration public static readonly BindableProperty EventHandlersProperty Field Value Type Description BindableProperty Methods GetAccessKey(BindableObject) Returns the access key that is set to the view. Declaration public static RemoteControlKeyNames GetAccessKey(BindableObject view) Parameters Type Name Description BindableObject view The view to get the access key. Returns Type Description RemoteControlKeyNames Returns the remote contol key name. GetEventHandlers(BindableObject) Returns a collection of the RemoteKeyHandler for the specified view. Developers can add or remove RemoteKeyHandler s using this collection. Declaration public static IList<RemoteKeyHandler> GetEventHandlers(BindableObject view) Parameters Type Name Description BindableObject view The view to get a collection of the RemoteKeyHandler s. Returns Type Description System.Collections.Generic.IList < RemoteKeyHandler > Returns a collection of the RemoteKeyHandler s SetAccessKey(BindableObject, RemoteControlKeyNames) Sets the access key to the specified view. When the access key is pressed, the specified view will directly get the focus and also be clicked if it is the Button. Declaration public static void SetAccessKey(BindableObject view, RemoteControlKeyNames value) Parameters Type Name Description BindableObject view The view to be set. RemoteControlKeyNames value The remote control key name to be set to the view."
  },
  "api/Tizen.TV.UIControls.Forms.DrawerPosition.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DrawerPosition.html",
    "title": "Enum DrawerPosition",
    "keywords": "Enum DrawerPosition Enumeration that specifies the DrawerPosition Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum DrawerPosition Fields Name Description Default Except when in RTL mode, default is left. Left Drawer on left side Right Drawer on right side"
  },
  "api/Tizen.TV.UIControls.Forms.DisplayAspectMode.html": {
    "href": "api/Tizen.TV.UIControls.Forms.DisplayAspectMode.html",
    "title": "Enum DisplayAspectMode",
    "keywords": "Enum DisplayAspectMode Enumerates values that define how a media content is displayed. Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public enum DisplayAspectMode Fields Name Description AspectFill Scale the media content to fill the view. AspectFit Scale the media content to fit the view. Fill Scale the media content to so it exactly fills the view. OrignalSize The original size of the media content."
  },
  "api/Tizen.TV.UIControls.Forms.ContentPopup.html": {
    "href": "api/Tizen.TV.UIControls.Forms.ContentPopup.html",
    "title": "Class ContentPopup",
    "keywords": "Class ContentPopup The ContentPopup is a Popup, which allows you to customize the Layout to be displayed. Inheritance System.Object ContentPopup Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class ContentPopup : Element Fields BackgroundColorProperty BindableProperty. Identifies the BackgroundColor bindable property. Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty ContentProperty BindableProperty. Identifies the Content bindable property. Declaration public static readonly BindableProperty ContentProperty Field Value Type Description BindableProperty IsOpenProperty BindableProperty. Identifies the IsOpen bindable property. Declaration public static readonly BindableProperty IsOpenProperty Field Value Type Description BindableProperty Properties BackgroundColor Gets or sets the background color of popup. Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color Content Gets or sets content of the Popup. Declaration public Layout Content { get; set; } Property Value Type Description Layout IsOpen Gets or sets the popup is opened. Declaration public bool IsOpen { get; set; } Property Value Type Description System.Boolean Methods Dismiss() Dismisses the popup. Declaration public void Dismiss() OnBackButtonPressed() To change the default behavior of the BackButton. Default behavior is dismiss. Declaration protected virtual bool OnBackButtonPressed() Returns Type Description System.Boolean Default is false OnBindingContextChanged() Declaration protected override void OnBindingContextChanged() Events Dismissed Occurs when the popup is dismissed. Declaration public event EventHandler Dismissed Event Type Type Description System.EventHandler"
  },
  "api/Tizen.TV.UIControls.Forms.MediaSource.html": {
    "href": "api/Tizen.TV.UIControls.Forms.MediaSource.html",
    "title": "Class MediaSource",
    "keywords": "Class MediaSource Abstract class whose implementors load media contents from files or the Web. Inheritance System.Object MediaSource FileMediaSource UriMediaSource Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public abstract class MediaSource : Element Constructors MediaSource() Declaration protected MediaSource() Methods FromFile(String) Returns a new MediaSource that reads from file. Declaration public static MediaSource FromFile(string file) Parameters Type Name Description System.String file The file path to use as a media source. Returns Type Description MediaSource Returns the MediaSource. FromUri(Uri) Returns a new MediaSource that reads from uri. Declaration public static MediaSource FromUri(Uri uri) Parameters Type Name Description System.Uri uri The uri path to use as a media source. Returns Type Description MediaSource Returns the MediaSource. OnSourceChanged() Declaration protected void OnSourceChanged() Operators Implicit(String to MediaSource) Declaration public static implicit operator MediaSource(string source) Parameters Type Name Description System.String source Returns Type Description MediaSource Implicit(Uri to MediaSource) Declaration public static implicit operator MediaSource(Uri uri) Parameters Type Name Description System.Uri uri Returns Type Description MediaSource"
  },
  "api/Tizen.TV.UIControls.Forms.RecycleItemsView.html": {
    "href": "api/Tizen.TV.UIControls.Forms.RecycleItemsView.html",
    "title": "Class RecycleItemsView",
    "keywords": "Class RecycleItemsView A ScrollView that efficiently displays a collections of data using DataTemplate Inheritance System.Object RecycleItemsView Implements IRecycleItemsViewController Namespace : Tizen.TV.UIControls.Forms Assembly : Tizen.TV.UIControls.Forms.dll Syntax public class RecycleItemsView : ContentView, IRecycleItemsViewController Constructors RecycleItemsView() Creates and initializes a new instance of the RecycleItemsView class. Declaration public RecycleItemsView() Fields AllowFocusFooterProperty Backing store for the AllowFocusFooter property. Declaration public static readonly BindableProperty AllowFocusFooterProperty Field Value Type Description BindableProperty AllowFocusHeaderProperty Backing store for the AllowFocusHeader property. Declaration public static readonly BindableProperty AllowFocusHeaderProperty Field Value Type Description BindableProperty ColumnCountProperty Backing store for the ColumnCount property. Declaration public static readonly BindableProperty ColumnCountProperty Field Value Type Description BindableProperty ContentMarginProperty Backing store for the ContentMargin property. Declaration public static readonly BindableProperty ContentMarginProperty Field Value Type Description BindableProperty FocusedItemProperty Backing store for the FocusedItem property. Declaration public static readonly BindableProperty FocusedItemProperty Field Value Type Description BindableProperty FooterProperty Backing store for the Footer property. Declaration public static readonly BindableProperty FooterProperty Field Value Type Description BindableProperty FooterTemplateProperty Backing store for the FooterTemplate property. Declaration public static readonly BindableProperty FooterTemplateProperty Field Value Type Description BindableProperty HeaderProperty Backing store for the Header property. Declaration public static readonly BindableProperty HeaderProperty Field Value Type Description BindableProperty HeaderTemplateProperty Backing store for the HeaderTemplate property. Declaration public static readonly BindableProperty HeaderTemplateProperty Field Value Type Description BindableProperty ItemHeightProperty Backing store for the ItemHeight property. Declaration public static readonly BindableProperty ItemHeightProperty Field Value Type Description BindableProperty ItemsSourceProperty Backing store for the ItemsSource property. Declaration public static readonly BindableProperty ItemsSourceProperty Field Value Type Description BindableProperty ItemTemplateProperty Backing store for the ItemTemplate property. Declaration public static readonly BindableProperty ItemTemplateProperty Field Value Type Description BindableProperty ItemWidthProperty Backing store for the ItemWidth property. Declaration public static readonly BindableProperty ItemWidthProperty Field Value Type Description BindableProperty OrientationProperty Backing store for the Orientation property. Declaration public static readonly BindableProperty OrientationProperty Field Value Type Description BindableProperty ScrollBarVisibilityProperty Backing store for the ScrollBarVisibility property. Declaration public static readonly BindableProperty ScrollBarVisibilityProperty Field Value Type Description BindableProperty ScrollPolicyProperty Backing store for the ScrollPolicy property. Declaration public static readonly BindableProperty ScrollPolicyProperty Field Value Type Description BindableProperty SelectedItemProperty Backing store for the SelectedItem property. Declaration public static readonly BindableProperty SelectedItemProperty Field Value Type Description BindableProperty SpacingProperty Backing store for the Spacing property. Declaration public static readonly BindableProperty SpacingProperty Field Value Type Description BindableProperty Properties AllowFocusFooter Gets or sets the focusable on footer Declaration public bool AllowFocusFooter { get; set; } Property Value Type Description System.Boolean AllowFocusHeader Gets or sets the focusable on header Declaration public bool AllowFocusHeader { get; set; } Property Value Type Description System.Boolean ColumnCount Gets or sets the count of columns. Declaration public int ColumnCount { get; set; } Property Value Type Description System.Int32 ContentMargin Gets or sets the margin for the content. Declaration public Thickness ContentMargin { get; set; } Property Value Type Description Thickness FocusedItem Gets or sets the currently focused item from the ItemsSource. Declaration public object FocusedItem { get; set; } Property Value Type Description System.Object Footer Gets or sets the binding, or view that will be displayed at the last of the items. Declaration public object Footer { get; set; } Property Value Type Description System.Object FooterElement Gets instantiated Footer view Declaration public View FooterElement { get; protected set; } Property Value Type Description View FooterTemplate Gets or sets a data template to use to format a data object for display Footer. Declaration public DataTemplate FooterTemplate { get; set; } Property Value Type Description DataTemplate Header Gets or sets the binding, or view that will be displayed at the first of the items. Declaration public object Header { get; set; } Property Value Type Description System.Object HeaderElement Gets instantiated Header view Declaration public View HeaderElement { get; protected set; } Property Value Type Description View HeaderTemplate Gets or sets a data template to use to format a data object for display Header. Declaration public DataTemplate HeaderTemplate { get; set; } Property Value Type Description DataTemplate ItemHeight Gets or sets a value that represents the height of an item. Declaration public double ItemHeight { get; set; } Property Value Type Description System.Double ItemsSource Gets or sets the source of items to template and display. Declaration public IEnumerable ItemsSource { get; set; } Property Value Type Description System.Collections.IEnumerable ItemTemplate Gets or sets the DataTemplate to apply to the ItemsSource. Declaration public DataTemplate ItemTemplate { get; set; } Property Value Type Description DataTemplate ItemWidth Gets or sets a value that represents the width of an item. Declaration public double ItemWidth { get; set; } Property Value Type Description System.Double Orientation Gets or sets the value which indicates the direction which items are positioned. Declaration public RecycleItemsViewOrientation Orientation { get; set; } Property Value Type Description RecycleItemsViewOrientation RedundantItemCount declare the number of items to make redundant. Declaration protected virtual int RedundantItemCount { get; } Property Value Type Description System.Int32 ScrollBarVisibility Gets or sets the scroll bar visibility. Declaration public ScrollBarVisibility ScrollBarVisibility { get; set; } Property Value Type Description ScrollBarVisibility ScrollPolicy Gets or sets the scroll position policy. Declaration public ScrollToPosition ScrollPolicy { get; set; } Property Value Type Description ScrollToPosition ScrollView Gets the ScrollView internally created. Declaration protected ScrollView ScrollView { get; } Property Value Type Description ScrollView SelectedItem Gets or sets the currently selected item from the ItemsSource. Declaration public object SelectedItem { get; set; } Property Value Type Description System.Object Spacing Gets or sets a value which indicates the amount of space between each item. Declaration public double Spacing { get; set; } Property Value Type Description System.Double Methods CreateScrollView() Create a ScrollView that used in RecycleItemsView. Declaration protected virtual ScrollView CreateScrollView() Returns Type Description ScrollView ScrollView InitializeComponent() Declaration protected void InitializeComponent() LayoutChildren(Double, Double, Double, Double) Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description System.Double x System.Double y System.Double width System.Double height OnItemFocused(Object, View, Boolean) Called when Item is focused Declaration protected virtual void OnItemFocused(object data, View targetView, bool isFocused) Parameters Type Name Description System.Object data The focused item from the ItemsSource. View targetView Instantiated View System.Boolean isFocused Whether or not focused OnMeasure(Double, Double) Declaration protected override SizeRequest OnMeasure(double widthConstraint, double heightConstraint) Parameters Type Name Description System.Double widthConstraint System.Double heightConstraint Returns Type Description SizeRequest OnSizeAllocated(Double, Double) Declaration protected override void OnSizeAllocated(double width, double height) Parameters Type Name Description System.Double width System.Double height ScrollToAsync(Double, Double, Boolean) Returns a task that scrolls the scroll view to a position asynchronously. Declaration public Task ScrollToAsync(double x, double y, bool animation) Parameters Type Name Description System.Double x The X position of the finished scroll. System.Double y The Y position of the finished scroll. System.Boolean animation Whether or not to animate the scroll. Returns Type Description System.Threading.Tasks.Task Task ScrollToAsync(Object, ScrollToPosition, Boolean) Returns a task that scrolls the scroll view to an item asynchronously. Declaration public Task ScrollToAsync(object item, ScrollToPosition position, bool animation) Parameters Type Name Description System.Object item The item to scroll. ScrollToPosition position The scroll position. System.Boolean animation Whether or not to animate the scroll. Returns Type Description System.Threading.Tasks.Task Task Events ItemFocused Event that is raised when a new item is focused. Declaration public event EventHandler<FocusedItemChangedEventArgs> ItemFocused Event Type Type Description System.EventHandler < FocusedItemChangedEventArgs > ItemRealized Event that is raised when a item's view is attached the RecycleItemsView. Declaration public event EventHandler<ItemRealizedEventArgs> ItemRealized Event Type Type Description System.EventHandler < ItemRealizedEventArgs > ItemSelected Event that is raised when a new item is selected. Declaration public event EventHandler<SelectedItemChangedEventArgs> ItemSelected Event Type Type Description System.EventHandler < SelectedItemChangedEventArgs > ItemUnrealized Event that is raised when a item's view is detached the RecycleItemsView. Declaration public event EventHandler<ItemUnrealizedEventArgs> ItemUnrealized Event Type Type Description System.EventHandler < ItemUnrealizedEventArgs > Explicit Interface Implementations IRecycleItemsViewController.FocusedView Declaration View IRecycleItemsViewController.FocusedView { get; } Returns Type Description View IRecycleItemsViewController.ScrollBounds Declaration Rectangle IRecycleItemsViewController.ScrollBounds { get; } Returns Type Description Rectangle IRecycleItemsViewController.SendKeyDown(String) Declaration bool IRecycleItemsViewController.SendKeyDown(string keyname) Parameters Type Name Description System.String keyname Returns Type Description System.Boolean Implements IRecycleItemsViewController"
  }
}